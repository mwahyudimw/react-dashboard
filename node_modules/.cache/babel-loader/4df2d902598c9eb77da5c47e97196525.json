{"ast":null,"code":"import _slicedToArray from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/views/Dashboard/components/TotalUsers/TotalUsers.js\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardContent, Grid, Typography, Avatar } from \"@material-ui/core\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport PeopleIcon from \"@material-ui/icons/PeopleOutlined\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../../../api/api\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100%\",\n    background: \"teal\"\n  },\n  content: {\n    alignItems: \"center\",\n    display: \"flex\"\n  },\n  title: {\n    fontWeight: 700,\n    color: \"#fff\"\n  },\n  avatar: {\n    backgroundColor: \"#fff\",\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32,\n    color: \"teal\"\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  differenceTextColor: {\n    color: \"#fff\"\n  },\n  differenceIcon: {\n    color: \"#fff\"\n  },\n  differenceValue: {\n    color: \"#fff\",\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalUsers = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loading = _React$useState2[0],\n        setLoading = _React$useState2[1];\n\n  const _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        jumlahUser = _React$useState4[0],\n        setJumlahUser = _React$useState4[1];\n\n  React.useEffect(() => {\n    handleGetUser();\n  }, []);\n\n  const handleGetUser = () => {\n    setLoading(true);\n    axios({\n      method: \"get\",\n      url: \"\".concat(apiDashManage + \"users\"),\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      console.log(\"product dashboard\", res);\n      const dataUser = res.data.user;\n      setJumlahUser(dataUser.length);\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n    });\n  };\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"TOTAL USERS\"), React.createElement(Typography, {\n    className: classes.differenceTextColor,\n    variant: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, loading ? \"loading...\" : jumlahUser)), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(PeopleIcon, {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: classes.difference,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(ArrowUpwardIcon, {\n    className: classes.differenceIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.differenceValue,\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"16%\"), React.createElement(Typography, {\n    className: classes.caption,\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Since last month\"))));\n};\n\nTotalUsers.propTypes = {\n  className: PropTypes.string\n};\nexport default TotalUsers;","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/views/Dashboard/components/TotalUsers/TotalUsers.js"],"names":["React","clsx","PropTypes","makeStyles","Card","CardContent","Grid","Typography","Avatar","ArrowUpwardIcon","PeopleIcon","axios","apiDashManage","useStyles","theme","root","height","background","content","alignItems","display","title","fontWeight","color","avatar","backgroundColor","width","icon","difference","marginTop","spacing","differenceTextColor","differenceIcon","differenceValue","marginRight","TotalUsers","props","className","rest","classes","useState","loading","setLoading","jumlahUser","setJumlahUser","useEffect","handleGetUser","method","url","headers","Authorization","localStorage","getItem","then","res","console","log","dataUser","data","user","length","catch","err","caption","propTypes","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardContent, Grid, Typography, Avatar } from \"@material-ui/core\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport PeopleIcon from \"@material-ui/icons/PeopleOutlined\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../../../api/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    background: \"teal\",\n  },\n  content: {\n    alignItems: \"center\",\n    display: \"flex\",\n  },\n  title: {\n    fontWeight: 700,\n    color: \"#fff\",\n  },\n  avatar: {\n    backgroundColor: \"#fff\",\n    height: 56,\n    width: 56,\n  },\n  icon: {\n    height: 32,\n    width: 32,\n    color: \"teal\",\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  differenceTextColor: {\n    color: \"#fff\",\n  },\n  differenceIcon: {\n    color: \"#fff\",\n  },\n  differenceValue: {\n    color: \"#fff\",\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst TotalUsers = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [jumlahUser, setJumlahUser] = React.useState(0);\n\n  React.useEffect(() => {\n    handleGetUser();\n  }, []);\n  const handleGetUser = () => {\n    setLoading(true);\n    axios({\n      method: \"get\",\n      url: `${apiDashManage + \"users\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => {\n        console.log(\"product dashboard\", res);\n        const dataUser = res.data.user;\n        setJumlahUser(dataUser.length);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              TOTAL USERS\n            </Typography>\n            <Typography className={classes.differenceTextColor} variant=\"h3\">\n              {loading ? \"loading...\" : jumlahUser}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <div className={classes.difference}>\n          <ArrowUpwardIcon className={classes.differenceIcon} />\n          <Typography className={classes.differenceValue} variant=\"body2\">\n            16%\n          </Typography>\n          <Typography className={classes.caption} variant=\"caption\">\n            Since last month\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalUsers.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default TotalUsers;\n"]},"metadata":{},"sourceType":"module"}