{"ast":null,"code":"import _objectSpread from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/views/Account/components/AccountProfile/AccountProfile.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardActions, CardContent, Avatar, Typography, Divider, Button, LinearProgress } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../../../api/api\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: \"flex\"\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst AccountProfile = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const DataUser = JSON.parse(localStorage.getItem(\"data\"));\n\n  const _useState = useState(\"http://dashmanage.herokuapp.com/\".concat(DataUser.picture)),\n        _useState2 = _slicedToArray(_useState, 2),\n        picture = _useState2[0],\n        setPicture = _useState2[1];\n\n  const _useState3 = useState({\n    name: \"\",\n    avatar: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  useEffect(() => {\n    const DataUser = JSON.parse(localStorage.getItem(\"data\"));\n    setUser(user => _objectSpread({}, user, {\n      username: DataUser.username,\n      avatar: \"http://dashmanage.herokuapp.com/\".concat(DataUser.picture)\n    }));\n  }, [user]);\n\n  const updateImage = () => {\n    axios({\n      method: \"put\",\n      url: \"\".concat(apiDashManage + \"update/pict-user\"),\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      },\n      data: {\n        picture: picture,\n        id: DataUser._id\n      }\n    }).then(res => {\n      console.log(\"res update image\", res);\n    });\n  };\n\n  const onImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n\n      reader.onload = e => {\n        setPicture(e.target.result);\n      };\n\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, user.username)), React.createElement(Avatar, {\n    className: classes.avatar,\n    src: picture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    style: {\n      position: \"absolute\",\n      marginTop: \"40px\"\n    },\n    type: \"file\",\n    onChange: onImageChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: updateImage,\n    className: classes.uploadButton,\n    color: \"primary\",\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Upload picture\"), React.createElement(Button, {\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Remove picture\")));\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string\n};\nexport default AccountProfile;","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/views/Account/components/AccountProfile/AccountProfile.js"],"names":["React","useEffect","useState","PropTypes","clsx","moment","makeStyles","Card","CardActions","CardContent","Avatar","Typography","Divider","Button","LinearProgress","axios","apiDashManage","useStyles","theme","root","details","display","avatar","marginLeft","height","width","flexShrink","flexGrow","progress","marginTop","spacing","uploadButton","marginRight","AccountProfile","props","className","rest","classes","DataUser","JSON","parse","localStorage","getItem","picture","setPicture","name","user","setUser","username","updateImage","method","url","headers","Authorization","data","id","_id","then","res","console","log","onImageChange","event","target","files","reader","FileReader","onload","e","result","readAsDataURL","position","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Typography,\n  Divider,\n  Button,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../../../api/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  details: {\n    display: \"flex\",\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0,\n  },\n  progress: {\n    marginTop: theme.spacing(2),\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst AccountProfile = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const DataUser = JSON.parse(localStorage.getItem(\"data\"));\n  const [picture, setPicture] = useState(\n    `http://dashmanage.herokuapp.com/${DataUser.picture}`\n  );\n  const [user, setUser] = useState({\n    name: \"\",\n    avatar: \"\",\n  });\n\n  useEffect(() => {\n    const DataUser = JSON.parse(localStorage.getItem(\"data\"));\n    setUser((user) => ({\n      ...user,\n      username: DataUser.username,\n      avatar: `http://dashmanage.herokuapp.com/${DataUser.picture}`,\n    }));\n  }, [user]);\n\n  const updateImage = () => {\n    axios({\n      method: \"put\",\n      url: `${apiDashManage + \"update/pict-user\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n      data: {\n        picture: picture,\n        id: DataUser._id,\n      },\n    }).then((res) => {\n      console.log(\"res update image\", res);\n    });\n  };\n\n  const onImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        setPicture(e.target.result);\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <div className={classes.details}>\n          <div>\n            <Typography gutterBottom variant=\"h2\">\n              {user.username}\n            </Typography>\n          </div>\n          <Avatar className={classes.avatar} src={picture} />\n          <input\n            style={{ position: \"absolute\", marginTop: \"40px\" }}\n            type=\"file\"\n            onChange={onImageChange}\n          />\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          onClick={updateImage}\n          className={classes.uploadButton}\n          color=\"primary\"\n          variant=\"text\"\n        >\n          Upload picture\n        </Button>\n        <Button variant=\"text\">Remove picture</Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AccountProfile;\n"]},"metadata":{},"sourceType":"module"}