{"ast":null,"code":"import _slicedToArray from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/views/UserList/components/UsersTable/UsersTable.js\";\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { apiDashManage } from \"../../../../api/api\";\nimport axios from \"axios\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nfunction UsersTable() {\n  const tableRef = React.createRef();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        listDataUser = _useState2[0],\n        setListDataUser = _useState2[1];\n\n  useEffect(() => {\n    handleGetDataUser();\n  }, []);\n\n  const handleGetDataUser = () => {\n    axios({\n      method: \"get\",\n      url: \"\".concat(apiDashManage + \"users\"),\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      setListDataUser(res.data.user);\n      console.log(\"data baru user\", res);\n    });\n  };\n\n  return React.createElement(LoadingOverlay, {\n    active: true,\n    spinner: true,\n    text: \"Loading your content...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    title: \"Users List\",\n    tableRef: tableRef,\n    columns: [{\n      title: \"Avatar\",\n      field: \"picture \",\n      render: rowData => React.createElement(\"img\", {\n        style: {\n          height: 36,\n          borderRadius: \"50%\"\n        },\n        src: rowData.picture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })\n    }, {\n      title: \"ID User\",\n      field: \"_id\"\n    }, {\n      title: \"Email\",\n      field: \"email\"\n    }, {\n      title: \"Username\",\n      field: \"username\"\n    }],\n    data: listDataUser,\n    actions: [{\n      icon: \"refresh\",\n      tooltip: \"Refresh Data\",\n      isFreeAction: true,\n      onClick: () => tableRef.current && tableRef.current.onQueryChange()\n    }],\n    options: {\n      headerStyle: {\n        fontSize: \"15px\",\n        fontWeight: \"bold\",\n        borderRight: \"1px solid #ccc\"\n      },\n      rowStyle: {\n        fontFamily: \"Roboto,Helvetica,Arial,sans-serif\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n}\n\nexport default UsersTable;","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/views/UserList/components/UsersTable/UsersTable.js"],"names":["React","useState","useEffect","MaterialTable","apiDashManage","axios","LoadingOverlay","UsersTable","tableRef","createRef","listDataUser","setListDataUser","handleGetDataUser","method","url","headers","Authorization","localStorage","getItem","then","res","data","user","console","log","title","field","render","rowData","height","borderRadius","picture","icon","tooltip","isFreeAction","onClick","current","onQueryChange","headerStyle","fontSize","fontWeight","borderRight","rowStyle","fontFamily"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAMC,QAAQ,GAAGR,KAAK,CAACS,SAAN,EAAjB;;AADoB,oBAEoBR,QAAQ,CAAC,EAAD,CAF5B;AAAA;AAAA,QAEbS,YAFa;AAAA,QAECC,eAFD;;AAIpBT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,iBAAiB,GAAG,MAAM;AAC9BP,IAAAA,KAAK,CAAC;AACJQ,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,YAAKV,aAAa,GAAG,OAArB,CAFC;AAGJW,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADpB;AAHL,KAAD,CAAL,CAMGC,IANH,CAMSC,GAAD,IAAS;AACfT,MAAAA,eAAe,CAACS,GAAG,CAACC,IAAJ,CAASC,IAAV,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,GAA9B;AACD,KATD;AAUD,GAXD;;AAaA,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAE,IAAxB;AAA8B,IAAA,OAAO,MAArC;AAAsC,IAAA,IAAI,EAAC,yBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,QAAQ,EAAEZ,QAFZ;AAGE,IAAA,OAAO,EAAE,CACP;AACEiB,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,KAAK,EAAE,UAFT;AAGEC,MAAAA,MAAM,EAAGC,OAAD,IACN;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,YAAY,EAAE;AAA5B,SADT;AAEE,QAAA,GAAG,EAAEF,OAAO,CAACG,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,KADO,EAWP;AAAEN,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAXO,EAYP;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAZO,EAaP;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAbO,CAHX;AAmBE,IAAA,IAAI,EAAEhB,YAnBR;AAoBE,IAAA,OAAO,EAAE,CACP;AACEsB,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,OAAO,EAAE,cAFX;AAGEC,MAAAA,YAAY,EAAE,IAHhB;AAIEC,MAAAA,OAAO,EAAE,MAAM3B,QAAQ,CAAC4B,OAAT,IAAoB5B,QAAQ,CAAC4B,OAAT,CAAiBC,aAAjB;AAJrC,KADO,CApBX;AA4BE,IAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE;AACXC,QAAAA,QAAQ,EAAE,MADC;AAEXC,QAAAA,UAAU,EAAE,MAFD;AAGXC,QAAAA,WAAW,EAAE;AAHF,OADN;AAMPC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,UAAU,EAAE;AADJ;AANH,KA5BX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA2CD;;AAED,eAAepC,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { apiDashManage } from \"../../../../api/api\";\nimport axios from \"axios\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nfunction UsersTable() {\n  const tableRef = React.createRef();\n  const [listDataUser, setListDataUser] = useState([]);\n\n  useEffect(() => {\n    handleGetDataUser();\n  }, []);\n  const handleGetDataUser = () => {\n    axios({\n      method: \"get\",\n      url: `${apiDashManage + \"users\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n    }).then((res) => {\n      setListDataUser(res.data.user);\n      console.log(\"data baru user\", res);\n    });\n  };\n\n  return (\n    <LoadingOverlay active={true} spinner text=\"Loading your content...\">\n      <MaterialTable\n        title=\"Users List\"\n        tableRef={tableRef}\n        columns={[\n          {\n            title: \"Avatar\",\n            field: \"picture \",\n            render: (rowData) => (\n              <img\n                style={{ height: 36, borderRadius: \"50%\" }}\n                src={rowData.picture}\n              />\n            ),\n          },\n          { title: \"ID User\", field: \"_id\" },\n          { title: \"Email\", field: \"email\" },\n          { title: \"Username\", field: \"username\" },\n          // { title: \"Last Name\", field: \"last_name\" },\n        ]}\n        data={listDataUser}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () => tableRef.current && tableRef.current.onQueryChange(),\n          },\n        ]}\n        options={{\n          headerStyle: {\n            fontSize: \"15px\",\n            fontWeight: \"bold\",\n            borderRight: \"1px solid #ccc\",\n          },\n          rowStyle: {\n            fontFamily: \"Roboto,Helvetica,Arial,sans-serif\",\n          },\n        }}\n      />\n    </LoadingOverlay>\n  );\n}\n\nexport default UsersTable;\n"]},"metadata":{},"sourceType":"module"}