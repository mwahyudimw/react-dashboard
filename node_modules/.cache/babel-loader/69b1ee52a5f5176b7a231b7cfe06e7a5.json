{"ast":null,"code":"var _jsxFileName = \"/home/mronoyy/Documents/project/react-dashboard/src/context/tentangContext.js\";\nimport React from \"react\";\nimport { apiDashManage } from \"../api/api\";\nimport axios from \"axios\";\nlet ContextType;\nconst {\n  Provider,\n  Consumer\n} = ContextType = React.createContext();\n\nclass TentangProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tentangkami: [],\n      snackbar: {\n        loadTentang: true,\n        open: false,\n        title: \"\",\n        severity: \"\",\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      values: {\n        description: \"\",\n        type: \"Tentang-Kami\"\n      },\n      loading: {\n        deleted: false,\n        post: false,\n        put: false\n      },\n      disabled: false\n    };\n\n    this.getTentangKami = () => {\n      axios.get(`${apiDashManage}tentang-kami`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => {\n        if (res.data.portalWebs.length <= 0) {\n          this.setState(prevState => ({\n            snackbar: { ...prevState.snackbar,\n              open: true,\n              title: \"Your tentang-kami empty, please make first description !\",\n              severity: \"info\",\n              loadTentang: false\n            }\n          }));\n        } else {\n          console.log(this.state.tentangkami);\n          this.setState(prevState => ({\n            tentangkami: res.data.portalWebs,\n            snackbar: { ...prevState.snackbar,\n              open: false,\n              loadTentang: false\n            }\n          }));\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.handleChange = (event, editor) => {\n      const data = editor.getData();\n      this.setState(prevState => ({\n        values: { ...prevState.values,\n          description: data\n        }\n      }), () => console.log(this.state.values.description));\n    };\n\n    this.addTentang = () => {\n      this.setState(prevState => ({\n        loading: { ...prevState.loading,\n          post: true\n        }\n      }));\n      const dataTentang = {\n        description: this.state.values.description,\n        type: this.state.values.type\n      };\n      axios({\n        method: \"post\",\n        url: `${apiDashManage}portal-web`,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        data: dataTentang\n      }).then(() => {\n        this.setState(prevState => ({\n          disabled: true,\n          loading: { ...prevState.loading,\n            post: true\n          },\n          snackbar: { ...prevState.snackbar,\n            open: true,\n            title: \"Description has been created !\",\n            severity: \"success\"\n          }\n        }));\n      }).catch(() => {\n        this.setState(prevState => ({\n          disabled: true,\n          loading: { ...prevState.loading,\n            post: false\n          },\n          snackbar: { ...prevState.snackbar,\n            open: true,\n            title: \"Connection Error !\",\n            severity: \"error\"\n          }\n        }));\n        this.getTentangKami();\n      });\n    };\n\n    this.deleteTentang = async id => {\n      this.setState(prevState => ({\n        loading: { ...prevState.loading,\n          deleted: true\n        }\n      }));\n      const response = await axios({\n        method: \"delete\",\n        url: `${apiDashManage}portal-web/${id}`,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      const responseJson = await response;\n\n      if (responseJson) {\n        this.setState(prevState => ({\n          loading: { ...prevState.loading,\n            deleted: true\n          },\n          disabled: false,\n          snackbar: { ...prevState.snackbar,\n            open: true,\n            title: \"Description has been deleted !\",\n            severity: \"success\"\n          }\n        }));\n        this.getTentangKami();\n      } else {\n        this.setState(prevState => ({\n          loading: { ...prevState.loading,\n            deleted: false\n          },\n          disabled: true,\n          snackbar: { ...prevState.snackbar,\n            open: true,\n            title: \"Check your connection !\",\n            severity: \"error\"\n          }\n        }));\n      }\n    };\n\n    this.onClose = () => {\n      this.setState(prevState => ({\n        snackbar: { ...prevState.snackbar,\n          open: false\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.getTentangKami();\n  }\n\n  render() {\n    const {\n      state,\n      onClose,\n      deleteTentang,\n      handleChange,\n      addTentang\n    } = this;\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Provider, {\n      value: { ...state,\n        onClose: onClose,\n        deleteTentang: deleteTentang,\n        addTentang: addTentang,\n        handleChange: handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nexport { Provider, Consumer, TentangProvider };","map":{"version":3,"sources":["/home/mronoyy/Documents/project/react-dashboard/src/context/tentangContext.js"],"names":["React","apiDashManage","axios","ContextType","Provider","Consumer","createContext","TentangProvider","Component","state","tentangkami","snackbar","loadTentang","open","title","severity","vertical","horizontal","values","description","type","loading","deleted","post","put","disabled","getTentangKami","get","headers","Authorization","localStorage","getItem","then","res","data","portalWebs","length","setState","prevState","console","log","catch","err","handleChange","event","editor","getData","addTentang","dataTentang","method","url","deleteTentang","id","response","responseJson","onClose","componentDidMount","render","children","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { apiDashManage } from \"../api/api\";\nimport axios from \"axios\";\n\nlet ContextType;\nconst { Provider, Consumer } = (ContextType = React.createContext());\n\nclass TentangProvider extends React.Component {\n  state = {\n    tentangkami: [],\n    snackbar: {\n      loadTentang: true,\n      open: false,\n      title: \"\",\n      severity: \"\",\n      vertical: \"top\",\n      horizontal: \"right\",\n    },\n    values: {\n      description: \"\",\n      type: \"Tentang-Kami\",\n    },\n    loading: {\n      deleted: false,\n      post: false,\n      put: false,\n    },\n    disabled: false,\n  };\n\n  componentDidMount() {\n    this.getTentangKami();\n  }\n\n  getTentangKami = () => {\n    axios\n      .get(`${apiDashManage}tentang-kami`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((res) => {\n        if (res.data.portalWebs.length <= 0) {\n          this.setState((prevState) => ({\n            snackbar: {\n              ...prevState.snackbar,\n              open: true,\n              title: \"Your tentang-kami empty, please make first description !\",\n              severity: \"info\",\n              loadTentang: false,\n            },\n          }));\n        } else {\n          console.log(this.state.tentangkami);\n          this.setState((prevState) => ({\n            tentangkami: res.data.portalWebs,\n            snackbar: {\n              ...prevState.snackbar,\n              open: false,\n              loadTentang: false,\n            },\n          }));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handleChange = (event, editor) => {\n    const data = editor.getData();\n    this.setState(\n      (prevState) => ({\n        values: {\n          ...prevState.values,\n          description: data,\n        },\n      }),\n      () => console.log(this.state.values.description)\n    );\n  };\n\n  addTentang = () => {\n    this.setState((prevState) => ({\n      loading: {\n        ...prevState.loading,\n        post: true,\n      },\n    }));\n\n    const dataTentang = {\n      description: this.state.values.description,\n      type: this.state.values.type,\n    };\n\n    axios({\n      method: \"post\",\n      url: `${apiDashManage}portal-web`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      data: dataTentang,\n    })\n      .then(() => {\n        this.setState((prevState) => ({\n          disabled: true,\n          loading: {\n            ...prevState.loading,\n            post: true,\n          },\n          snackbar: {\n            ...prevState.snackbar,\n            open: true,\n            title: \"Description has been created !\",\n            severity: \"success\",\n          },\n        }));\n      })\n      .catch(() => {\n        this.setState((prevState) => ({\n          disabled: true,\n          loading: {\n            ...prevState.loading,\n            post: false,\n          },\n          snackbar: {\n            ...prevState.snackbar,\n            open: true,\n            title: \"Connection Error !\",\n            severity: \"error\",\n          },\n        }));\n        this.getTentangKami();\n      });\n  };\n\n  deleteTentang = async (id) => {\n    this.setState((prevState) => ({\n      loading: {\n        ...prevState.loading,\n        deleted: true,\n      },\n    }));\n    const response = await axios({\n      method: \"delete\",\n      url: `${apiDashManage}portal-web/${id}`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    });\n\n    const responseJson = await response;\n\n    if (responseJson) {\n      this.setState((prevState) => ({\n        loading: {\n          ...prevState.loading,\n          deleted: true,\n        },\n        disabled: false,\n        snackbar: {\n          ...prevState.snackbar,\n          open: true,\n          title: \"Description has been deleted !\",\n          severity: \"success\",\n        },\n      }));\n\n      this.getTentangKami();\n    } else {\n      this.setState((prevState) => ({\n        loading: {\n          ...prevState.loading,\n          deleted: false,\n        },\n        disabled: true,\n        snackbar: {\n          ...prevState.snackbar,\n          open: true,\n          title: \"Check your connection !\",\n          severity: \"error\",\n        },\n      }));\n    }\n  };\n\n  onClose = () => {\n    this.setState((prevState) => ({\n      snackbar: {\n        ...prevState.snackbar,\n        open: false,\n      },\n    }));\n  };\n\n  render() {\n    const { state, onClose, deleteTentang, handleChange, addTentang } = this;\n    const { children } = this.props;\n    return (\n      <Provider\n        value={{\n          ...state,\n          onClose: onClose,\n          deleteTentang: deleteTentang,\n          addTentang: addTentang,\n          handleChange: handleChange,\n        }}\n      >\n        {children}\n      </Provider>\n    );\n  }\n}\n\nexport { Provider, Consumer, TentangProvider };\n"]},"metadata":{},"sourceType":"module"}