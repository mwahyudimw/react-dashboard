{"ast":null,"code":"import _objectWithoutProperties from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/views/Products/Products.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MaterialTable from \"material-table\";\nimport { CategoryContext } from \"../../context/categoryContext\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../api/api\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Swal from \"sweetalert2\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(0.5)\n  },\n  content: {\n    marginTop: theme.spacing(0)\n  }\n}));\nexport default function Categeory() {\n  const classes = useStyles();\n\n  const _useContext = useContext(CategoryContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        categoryContext = _useContext2[0],\n        setCategoryContext = _useContext2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataCategory = _useState2[0],\n        setDataCategory = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dataProduct = _useState4[0],\n        setDataProduct = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        id = _useState6[0],\n        setId = _useState6[1];\n\n  var obj = categoryContext.reduce(function (acc, cur, i) {\n    acc[cur._id] = cur.name;\n    return acc;\n  }, {});\n\n  const _useState7 = useState({\n    get: false,\n    add: false,\n    update: false,\n    delete: false\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  const _React$useState = React.useState({\n    columns: [{\n      title: \"Name\",\n      field: \"name\"\n    }, {\n      title: \"Price\",\n      field: \"price\"\n    }, {\n      title: \"Stock\",\n      field: \"stock\"\n    }, {\n      title: \"Description\",\n      field: \"description\"\n    }, {\n      title: \"Image\",\n      field: \"imageUrl\",\n      editComponent: () => React.createElement(\"input\", {\n        type: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })\n    }, {\n      title: \"Category\",\n      field: \"categoryId\",\n      lookup: obj\n    }],\n    data: [{\n      name_product: \"Daun\",\n      slug: \"Baran\",\n      price: \"Rp. 80.000\",\n      stock: \"sss\",\n      description: \"ddd\",\n      status: \"sac\",\n      imageUrl: \"laks\",\n      categoryId: \"uuuu\"\n    }, {\n      name_product: \"Daun\",\n      slug: \"Baran\",\n      price: \"Rp. 100.000\",\n      stock: \"sss\",\n      description: \"ddd\",\n      status: \"sac\",\n      imageUrl: \"laks\",\n      categoryId: \"uuuu\"\n    }, {\n      name_product: \"Daun\",\n      slug: \"Baran\",\n      price: \"Rp. 95.000\",\n      stock: \"sss\",\n      description: \"ddd\",\n      status: \"sac\",\n      imageUrl: \"laks\",\n      categoryId: \"uuuu\"\n    }, {\n      name_product: \"Daun\",\n      slug: \"Baran\",\n      price: \"Rp. 100.000\",\n      stock: \"sss\",\n      description: \"ddd\",\n      status: \"sac\",\n      imageUrl: \"laks\",\n      categoryId: \"uuuu\"\n    }]\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  useEffect(() => {\n    // handleGetCategory();\n    handleGetProduct();\n  }, []); // const handleGetCategory = () => {\n  //   setLoading((loading) => ({\n  //     ...loading,\n  //     get: true,\n  //   }));\n  //   axios({\n  //     method: \"get\",\n  //     url: `${apiDashManage + \"category\"}`,\n  //     headers: {\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n  //     },\n  //   })\n  //     .then((res) => {\n  //       console.log(\"respon get category\", res.data.categories);\n  //       setDataCategory(res.data.categories);\n  //       setLoading((loading) => ({\n  //         ...loading,\n  //         get: false,\n  //       }));\n  //     })\n  //     .catch((err) => {\n  //       setLoading((loading) => ({\n  //         ...loading,\n  //         get: false,\n  //       }));\n  //       Swal.fire({\n  //         icon: \"error\",\n  //         title: \"Check your connections\",\n  //         text: \"\",\n  //       });\n  //     });\n  // };\n\n  const handleGetProduct = () => {\n    setLoading(loading => _objectSpread({}, loading, {\n      get: true\n    }));\n    axios({\n      method: \"get\",\n      url: \"\".concat(apiDashManage + \"product\"),\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      setDataProduct(res.data.products);\n      setLoading(loading => _objectSpread({}, loading, {\n        get: false\n      }));\n    }).catch(err => {\n      setLoading(loading => _objectSpread({}, loading, {\n        get: false\n      }));\n      Swal.fire({\n        icon: \"error\",\n        title: \"Check your connections\",\n        text: \"\"\n      });\n    });\n  };\n\n  return React.createElement(LoadingOverlay, {\n    active: loading.get || loading.add || loading.update || loading.delete === true ? true : false,\n    spinner: true,\n    text: loading.get ? \"loading your data...\" : loading.add ? \"add data...\" : loading.update ? \"update data...\" : loading.delete ? \"delete data...\" : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    className: classes.content,\n    title: \"Products\",\n    columns: state.columns,\n    data: dataProduct.map((_ref) => {\n      let categoryId = _ref.categoryId,\n          rest = _objectWithoutProperties(_ref, [\"categoryId\"]);\n\n      return _objectSpread({}, rest, {\n        categoryId: categoryId._id,\n        categoryName: categoryId.name\n      });\n    }),\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setLoading(loading => _objectSpread({}, loading, {\n          add: true\n        }));\n        resolve();\n        setState(prevState => {\n          const data = [...prevState.data];\n          axios({\n            method: \"post\",\n            url: \"\".concat(apiDashManage + \"product\"),\n            headers: {\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n            },\n            data: newData\n          }).then(res => {\n            Swal.fire(\"Added Success\", \"\", \"success\");\n            handleGetProduct();\n            setLoading(loading => _objectSpread({}, loading, {\n              add: false\n            }));\n          }).catch(err => {\n            setLoading(loading => _objectSpread({}, loading, {\n              add: false\n            }));\n            Swal.fire({\n              icon: \"error\",\n              title: \"Check your connections\",\n              text: \"\"\n            });\n          });\n          return _objectSpread({}, prevState, {\n            data\n          });\n        });\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setLoading(loading => _objectSpread({}, loading, {\n          update: true\n        }));\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              axios({\n                method: \"put\",\n                url: \"\".concat(apiDashManage + \"product\"),\n                headers: {\n                  Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n                },\n                data: {\n                  name: newData.name,\n                  price: newData.price,\n                  stock: newData.stock,\n                  description: newData.description,\n                  imgUrl: newData.imgUrl,\n                  categoryId: newData.categoryId,\n                  id: newData._id\n                }\n              }).then(res => {\n                Swal.fire(\"Update Success\", \"\", \"success\");\n                handleGetProduct();\n                setLoading(loading => _objectSpread({}, loading, {\n                  update: false\n                }));\n              }).catch(err => {\n                setLoading(loading => _objectSpread({}, loading, {\n                  update: false\n                }));\n                Swal.fire({\n                  icon: \"error\",\n                  title: \"Check your connections\",\n                  text: \"\"\n                });\n              });\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setLoading(loading => _objectSpread({}, loading, {\n          delete: true\n        }));\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            axios({\n              method: \"delete\",\n              url: \"\".concat(apiDashManage + \"\".concat(\"product/\" + oldData._id)),\n              headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n              },\n              data: oldData\n            }).then(res => {\n              Swal.fire(\"Delete Success\", \"\", \"success\");\n              handleGetProduct();\n              setLoading(loading => _objectSpread({}, loading, {\n                delete: false\n              }));\n            }).catch(err => {\n              setLoading(loading => _objectSpread({}, loading, {\n                delete: false\n              }));\n              Swal.fire({\n                icon: \"error\",\n                title: \"Check your connections\",\n                text: \"\"\n              });\n            });\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      })\n    },\n    options: {\n      headerStyle: {\n        fontSize: \"15px\",\n        fontWeight: \"bold\",\n        borderRight: \"1px solid #fff\",\n        background: \"#358A7C\",\n        color: \"#fff\"\n      },\n      rowStyle: {\n        fontFamily: \"Roboto,Helvetica,Arial,sans-serif\"\n      },\n      exportButton: true\n    },\n    detailPanel: rowData => {\n      return React.createElement(\"img\", {\n        style: {\n          width: \"25%\",\n          height: \"250px\",\n          display: \"block\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          marginTop: \"10px\",\n          marginBottom: \"10px\"\n        },\n        src: \"https://images.unsplash.com/photo-1495231916356-a86217efff12?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=676&q=80\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      });\n    },\n    onRowClick: (event, rowData, togglePanel) => togglePanel(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/views/Products/Products.js"],"names":["React","useState","useEffect","useContext","makeStyles","MaterialTable","CategoryContext","axios","apiDashManage","LoadingOverlay","Swal","useStyles","theme","root","padding","spacing","content","marginTop","Categeory","classes","categoryContext","setCategoryContext","dataCategory","setDataCategory","dataProduct","setDataProduct","id","setId","obj","reduce","acc","cur","i","_id","name","get","add","update","delete","loading","setLoading","columns","title","field","editComponent","lookup","data","name_product","slug","price","stock","description","status","imageUrl","categoryId","state","setState","handleGetProduct","method","url","headers","Authorization","localStorage","getItem","then","res","products","catch","err","fire","icon","text","map","rest","categoryName","onRowAdd","newData","Promise","resolve","prevState","onRowUpdate","oldData","setTimeout","imgUrl","onRowDelete","headerStyle","fontSize","fontWeight","borderRight","background","color","rowStyle","fontFamily","exportButton","rowData","width","height","display","marginLeft","marginRight","marginBottom","event","togglePanel"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,GAAd;AADL,GADiC;AAIvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ;AAJ8B,CAAZ,CAAD,CAA5B;AASA,eAAe,SAASG,SAAT,GAAqB;AAClC,QAAMC,OAAO,GAAGR,SAAS,EAAzB;;AADkC,sBAEYR,UAAU,CAACG,eAAD,CAFtB;AAAA;AAAA,QAE3Bc,eAF2B;AAAA,QAEVC,kBAFU;;AAAA,oBAGMpB,QAAQ,CAAC,EAAD,CAHd;AAAA;AAAA,QAG3BqB,YAH2B;AAAA,QAGbC,eAHa;;AAAA,qBAIItB,QAAQ,CAAC,EAAD,CAJZ;AAAA;AAAA,QAI3BuB,WAJ2B;AAAA,QAIdC,cAJc;;AAAA,qBAKdxB,QAAQ,CAAC,IAAD,CALM;AAAA;AAAA,QAK3ByB,EAL2B;AAAA,QAKvBC,KALuB;;AAOlC,MAAIC,GAAG,GAAGR,eAAe,CAACS,MAAhB,CAAuB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,CAAnB,EAAsB;AACrDF,IAAAA,GAAG,CAACC,GAAG,CAACE,GAAL,CAAH,GAAeF,GAAG,CAACG,IAAnB;AACA,WAAOJ,GAAP;AACD,GAHS,EAGP,EAHO,CAAV;;AAPkC,qBAYJ7B,QAAQ,CAAC;AACrCkC,IAAAA,GAAG,EAAE,KADgC;AAErCC,IAAAA,GAAG,EAAE,KAFgC;AAGrCC,IAAAA,MAAM,EAAE,KAH6B;AAIrCC,IAAAA,MAAM,EAAE;AAJ6B,GAAD,CAZJ;AAAA;AAAA,QAY3BC,OAZ2B;AAAA,QAYlBC,UAZkB;;AAAA,0BAkBRxC,KAAK,CAACC,QAAN,CAAe;AACvCwC,IAAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KADO,EAEP;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAFO,EAGP;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAHO,EAIP;AAAED,MAAAA,KAAK,EAAE,aAAT;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KAJO,EAKP;AACED,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,KAAK,EAAE,UAFT;AAGEC,MAAAA,aAAa,EAAE,MAAM;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHvB,KALO,EAUP;AACEF,MAAAA,KAAK,EAAE,UADT;AAEEC,MAAAA,KAAK,EAAE,YAFT;AAGEE,MAAAA,MAAM,EAAEjB;AAHV,KAVO,CAD8B;AAiBvCkB,IAAAA,IAAI,EAAE,CACJ;AACEC,MAAAA,YAAY,EAAE,MADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,KAAK,EAAE,YAHT;AAIEC,MAAAA,KAAK,EAAE,KAJT;AAKEC,MAAAA,WAAW,EAAE,KALf;AAMEC,MAAAA,MAAM,EAAE,KANV;AAOEC,MAAAA,QAAQ,EAAE,MAPZ;AAQEC,MAAAA,UAAU,EAAE;AARd,KADI,EAWJ;AACEP,MAAAA,YAAY,EAAE,MADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,KAAK,EAAE,aAHT;AAIEC,MAAAA,KAAK,EAAE,KAJT;AAKEC,MAAAA,WAAW,EAAE,KALf;AAMEC,MAAAA,MAAM,EAAE,KANV;AAOEC,MAAAA,QAAQ,EAAE,MAPZ;AAQEC,MAAAA,UAAU,EAAE;AARd,KAXI,EAqBJ;AACEP,MAAAA,YAAY,EAAE,MADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,KAAK,EAAE,YAHT;AAIEC,MAAAA,KAAK,EAAE,KAJT;AAKEC,MAAAA,WAAW,EAAE,KALf;AAMEC,MAAAA,MAAM,EAAE,KANV;AAOEC,MAAAA,QAAQ,EAAE,MAPZ;AAQEC,MAAAA,UAAU,EAAE;AARd,KArBI,EA+BJ;AACEP,MAAAA,YAAY,EAAE,MADhB;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,KAAK,EAAE,aAHT;AAIEC,MAAAA,KAAK,EAAE,KAJT;AAKEC,MAAAA,WAAW,EAAE,KALf;AAMEC,MAAAA,MAAM,EAAE,KANV;AAOEC,MAAAA,QAAQ,EAAE,MAPZ;AAQEC,MAAAA,UAAU,EAAE;AARd,KA/BI;AAjBiC,GAAf,CAlBQ;AAAA;AAAA,QAkB3BC,KAlB2B;AAAA,QAkBpBC,QAlBoB;;AA+ElCtD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAuD,IAAAA,gBAAgB;AACjB,GAHQ,EAGN,EAHM,CAAT,CA/EkC,CAoFlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMA,gBAAgB,GAAG,MAAM;AAC7BjB,IAAAA,UAAU,CAAED,OAAD,sBACNA,OADM;AAETJ,MAAAA,GAAG,EAAE;AAFI,MAAD,CAAV;AAIA5B,IAAAA,KAAK,CAAC;AACJmD,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,YAAKnD,aAAa,GAAG,SAArB,CAFC;AAGJoD,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADpB;AAHL,KAAD,CAAL,CAOGC,IAPH,CAOSC,GAAD,IAAS;AACbxC,MAAAA,cAAc,CAACwC,GAAG,CAACnB,IAAJ,CAASoB,QAAV,CAAd;AACA1B,MAAAA,UAAU,CAAED,OAAD,sBACNA,OADM;AAETJ,QAAAA,GAAG,EAAE;AAFI,QAAD,CAAV;AAID,KAbH,EAcGgC,KAdH,CAcUC,GAAD,IAAS;AACd5B,MAAAA,UAAU,CAAED,OAAD,sBACNA,OADM;AAETJ,QAAAA,GAAG,EAAE;AAFI,QAAD,CAAV;AAIAzB,MAAAA,IAAI,CAAC2D,IAAL,CAAU;AACRC,QAAAA,IAAI,EAAE,OADE;AAER5B,QAAAA,KAAK,EAAE,wBAFC;AAGR6B,QAAAA,IAAI,EAAE;AAHE,OAAV;AAKD,KAxBH;AAyBD,GA9BD;;AAgCA,SACE,oBAAC,cAAD;AACE,IAAA,MAAM,EACJhC,OAAO,CAACJ,GAAR,IAAeI,OAAO,CAACH,GAAvB,IAA8BG,OAAO,CAACF,MAAtC,IAAgDE,OAAO,CAACD,MAAR,KAAmB,IAAnE,GACI,IADJ,GAEI,KAJR;AAME,IAAA,OAAO,MANT;AAOE,IAAA,IAAI,EACFC,OAAO,CAACJ,GAAR,GACI,sBADJ,GAEII,OAAO,CAACH,GAAR,GACA,aADA,GAEAG,OAAO,CAACF,MAAR,GACA,gBADA,GAEAE,OAAO,CAACD,MAAR,GACA,gBADA,GAEA,IAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBE;AAAK,IAAA,SAAS,EAAEnB,OAAO,CAACN,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAEM,OAAO,CAACH,OADrB;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,OAAO,EAAEuC,KAAK,CAACd,OAHjB;AAIE,IAAA,IAAI,EAAEjB,WAAW,CAACgD,GAAZ,CAAgB,UAA6B;AAAA,UAA1BlB,UAA0B,QAA1BA,UAA0B;AAAA,UAAXmB,IAAW;;AACjD,+BACKA,IADL;AAEEnB,QAAAA,UAAU,EAAEA,UAAU,CAACrB,GAFzB;AAGEyC,QAAAA,YAAY,EAAEpB,UAAU,CAACpB;AAH3B;AAKD,KANK,CAJR;AAWE,IAAA,QAAQ,EAAE;AACRyC,MAAAA,QAAQ,EAAGC,OAAD,IACR,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBtC,QAAAA,UAAU,CAAED,OAAD,sBACNA,OADM;AAETH,UAAAA,GAAG,EAAE;AAFI,UAAD,CAAV;AAIA0C,QAAAA,OAAO;AACPtB,QAAAA,QAAQ,CAAEuB,SAAD,IAAe;AACtB,gBAAMjC,IAAI,GAAG,CAAC,GAAGiC,SAAS,CAACjC,IAAd,CAAb;AACAvC,UAAAA,KAAK,CAAC;AACJmD,YAAAA,MAAM,EAAE,MADJ;AAEJC,YAAAA,GAAG,YAAKnD,aAAa,GAAG,SAArB,CAFC;AAGJoD,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADpB,aAHL;AAMJjB,YAAAA,IAAI,EAAE8B;AANF,WAAD,CAAL,CAQGZ,IARH,CAQSC,GAAD,IAAS;AACbvD,YAAAA,IAAI,CAAC2D,IAAL,CAAU,eAAV,EAA2B,EAA3B,EAA+B,SAA/B;AACAZ,YAAAA,gBAAgB;AAChBjB,YAAAA,UAAU,CAAED,OAAD,sBACNA,OADM;AAETH,cAAAA,GAAG,EAAE;AAFI,cAAD,CAAV;AAID,WAfH,EAgBG+B,KAhBH,CAgBUC,GAAD,IAAS;AACd5B,YAAAA,UAAU,CAAED,OAAD,sBACNA,OADM;AAETH,cAAAA,GAAG,EAAE;AAFI,cAAD,CAAV;AAIA1B,YAAAA,IAAI,CAAC2D,IAAL,CAAU;AACRC,cAAAA,IAAI,EAAE,OADE;AAER5B,cAAAA,KAAK,EAAE,wBAFC;AAGR6B,cAAAA,IAAI,EAAE;AAHE,aAAV;AAKD,WA1BH;AA2BA,mCAAYQ,SAAZ;AAAuBjC,YAAAA;AAAvB;AACD,SA9BO,CAAR;AA+BD,OArCD,CAFM;AAwCRkC,MAAAA,WAAW,EAAE,CAACJ,OAAD,EAAUK,OAAV,KACX,IAAIJ,OAAJ,CAAaC,OAAD,IAAa;AACvBtC,QAAAA,UAAU,CAAED,OAAD,sBACNA,OADM;AAETF,UAAAA,MAAM,EAAE;AAFC,UAAD,CAAV;AAIA6C,QAAAA,UAAU,CAAC,MAAM;AACfJ,UAAAA,OAAO;;AACP,cAAIG,OAAJ,EAAa;AACXzB,YAAAA,QAAQ,CAAEuB,SAAD,IAAe;AACtB,oBAAMjC,IAAI,GAAG,CAAC,GAAGiC,SAAS,CAACjC,IAAd,CAAb;AACAvC,cAAAA,KAAK,CAAC;AACJmD,gBAAAA,MAAM,EAAE,KADJ;AAEJC,gBAAAA,GAAG,YAAKnD,aAAa,GAAG,SAArB,CAFC;AAGJoD,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,EACX,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFP,iBAHL;AAOJjB,gBAAAA,IAAI,EAAE;AACJZ,kBAAAA,IAAI,EAAE0C,OAAO,CAAC1C,IADV;AAEJe,kBAAAA,KAAK,EAAE2B,OAAO,CAAC3B,KAFX;AAGJC,kBAAAA,KAAK,EAAE0B,OAAO,CAAC1B,KAHX;AAIJC,kBAAAA,WAAW,EAAEyB,OAAO,CAACzB,WAJjB;AAKJgC,kBAAAA,MAAM,EAAEP,OAAO,CAACO,MALZ;AAMJ7B,kBAAAA,UAAU,EAAEsB,OAAO,CAACtB,UANhB;AAOJ5B,kBAAAA,EAAE,EAAEkD,OAAO,CAAC3C;AAPR;AAPF,eAAD,CAAL,CAiBG+B,IAjBH,CAiBSC,GAAD,IAAS;AACbvD,gBAAAA,IAAI,CAAC2D,IAAL,CAAU,gBAAV,EAA4B,EAA5B,EAAgC,SAAhC;AACAZ,gBAAAA,gBAAgB;AAChBjB,gBAAAA,UAAU,CAAED,OAAD,sBACNA,OADM;AAETF,kBAAAA,MAAM,EAAE;AAFC,kBAAD,CAAV;AAID,eAxBH,EAyBG8B,KAzBH,CAyBUC,GAAD,IAAS;AACd5B,gBAAAA,UAAU,CAAED,OAAD,sBACNA,OADM;AAETF,kBAAAA,MAAM,EAAE;AAFC,kBAAD,CAAV;AAIA3B,gBAAAA,IAAI,CAAC2D,IAAL,CAAU;AACRC,kBAAAA,IAAI,EAAE,OADE;AAER5B,kBAAAA,KAAK,EAAE,wBAFC;AAGR6B,kBAAAA,IAAI,EAAE;AAHE,iBAAV;AAKD,eAnCH;AAoCA,uCAAYQ,SAAZ;AAAuBjC,gBAAAA;AAAvB;AACD,aAvCO,CAAR;AAwCD;AACF,SA5CS,EA4CP,GA5CO,CAAV;AA6CD,OAlDD,CAzCM;AA4FRsC,MAAAA,WAAW,EAAGH,OAAD,IACX,IAAIJ,OAAJ,CAAaC,OAAD,IAAa;AACvBtC,QAAAA,UAAU,CAAED,OAAD,sBACNA,OADM;AAETD,UAAAA,MAAM,EAAE;AAFC,UAAD,CAAV;AAIA4C,QAAAA,UAAU,CAAC,MAAM;AACfJ,UAAAA,OAAO;AACPtB,UAAAA,QAAQ,CAAEuB,SAAD,IAAe;AACtB,kBAAMjC,IAAI,GAAG,CAAC,GAAGiC,SAAS,CAACjC,IAAd,CAAb;AACAvC,YAAAA,KAAK,CAAC;AACJmD,cAAAA,MAAM,EAAE,QADJ;AAEJC,cAAAA,GAAG,YAAKnD,aAAa,aAAM,aAAayE,OAAO,CAAChD,GAA3B,CAAlB,CAFC;AAGJ2B,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EACX,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFP,eAHL;AAOJjB,cAAAA,IAAI,EAAEmC;AAPF,aAAD,CAAL,CASGjB,IATH,CASSC,GAAD,IAAS;AACbvD,cAAAA,IAAI,CAAC2D,IAAL,CAAU,gBAAV,EAA4B,EAA5B,EAAgC,SAAhC;AACAZ,cAAAA,gBAAgB;AAChBjB,cAAAA,UAAU,CAAED,OAAD,sBACNA,OADM;AAETD,gBAAAA,MAAM,EAAE;AAFC,gBAAD,CAAV;AAID,aAhBH,EAiBG6B,KAjBH,CAiBUC,GAAD,IAAS;AACd5B,cAAAA,UAAU,CAAED,OAAD,sBACNA,OADM;AAETD,gBAAAA,MAAM,EAAE;AAFC,gBAAD,CAAV;AAIA5B,cAAAA,IAAI,CAAC2D,IAAL,CAAU;AACRC,gBAAAA,IAAI,EAAE,OADE;AAER5B,gBAAAA,KAAK,EAAE,wBAFC;AAGR6B,gBAAAA,IAAI,EAAE;AAHE,eAAV;AAKD,aA3BH;AA4BA,qCAAYQ,SAAZ;AAAuBjC,cAAAA;AAAvB;AACD,WA/BO,CAAR;AAgCD,SAlCS,EAkCP,GAlCO,CAAV;AAmCD,OAxCD;AA7FM,KAXZ;AAkJE,IAAA,OAAO,EAAE;AACPuC,MAAAA,WAAW,EAAE;AACXC,QAAAA,QAAQ,EAAE,MADC;AAEXC,QAAAA,UAAU,EAAE,MAFD;AAGXC,QAAAA,WAAW,EAAE,gBAHF;AAIXC,QAAAA,UAAU,EAAE,SAJD;AAKXC,QAAAA,KAAK,EAAE;AALI,OADN;AAQPC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,UAAU,EAAE;AADJ,OARH;AAWPC,MAAAA,YAAY,EAAE;AAXP,KAlJX;AA+JE,IAAA,WAAW,EAAGC,OAAD,IAAa;AACxB,aACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,KADF;AAELC,UAAAA,MAAM,EAAE,OAFH;AAGLC,UAAAA,OAAO,EAAE,OAHJ;AAILC,UAAAA,UAAU,EAAE,MAJP;AAKLC,UAAAA,WAAW,EAAE,MALR;AAMLlF,UAAAA,SAAS,EAAE,MANN;AAOLmF,UAAAA,YAAY,EAAE;AAPT,SADT;AAUE,QAAA,GAAG,EAAC,uIAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAcD,KA9KH;AA+KE,IAAA,UAAU,EAAE,CAACC,KAAD,EAAQP,OAAR,EAAiBQ,WAAjB,KAAiCA,WAAW,EA/K1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBF,CADF;AAyMD","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MaterialTable from \"material-table\";\nimport { CategoryContext } from \"../../context/categoryContext\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../api/api\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(0.5),\n  },\n  content: {\n    marginTop: theme.spacing(0),\n  },\n}));\n\nexport default function Categeory() {\n  const classes = useStyles();\n  const [categoryContext, setCategoryContext] = useContext(CategoryContext);\n  const [dataCategory, setDataCategory] = useState([]);\n  const [dataProduct, setDataProduct] = useState([]);\n  const [id, setId] = useState(null);\n\n  var obj = categoryContext.reduce(function(acc, cur, i) {\n    acc[cur._id] = cur.name;\n    return acc;\n  }, {});\n\n  const [loading, setLoading] = useState({\n    get: false,\n    add: false,\n    update: false,\n    delete: false,\n  });\n  const [state, setState] = React.useState({\n    columns: [\n      { title: \"Name\", field: \"name\" },\n      { title: \"Price\", field: \"price\" },\n      { title: \"Stock\", field: \"stock\" },\n      { title: \"Description\", field: \"description\" },\n      {\n        title: \"Image\",\n        field: \"imageUrl\",\n        editComponent: () => <input type=\"file\" />,\n      },\n      {\n        title: \"Category\",\n        field: \"categoryId\",\n        lookup: obj,\n      },\n    ],\n    data: [\n      {\n        name_product: \"Daun\",\n        slug: \"Baran\",\n        price: \"Rp. 80.000\",\n        stock: \"sss\",\n        description: \"ddd\",\n        status: \"sac\",\n        imageUrl: \"laks\",\n        categoryId: \"uuuu\",\n      },\n      {\n        name_product: \"Daun\",\n        slug: \"Baran\",\n        price: \"Rp. 100.000\",\n        stock: \"sss\",\n        description: \"ddd\",\n        status: \"sac\",\n        imageUrl: \"laks\",\n        categoryId: \"uuuu\",\n      },\n      {\n        name_product: \"Daun\",\n        slug: \"Baran\",\n        price: \"Rp. 95.000\",\n        stock: \"sss\",\n        description: \"ddd\",\n        status: \"sac\",\n        imageUrl: \"laks\",\n        categoryId: \"uuuu\",\n      },\n      {\n        name_product: \"Daun\",\n        slug: \"Baran\",\n        price: \"Rp. 100.000\",\n        stock: \"sss\",\n        description: \"ddd\",\n        status: \"sac\",\n        imageUrl: \"laks\",\n        categoryId: \"uuuu\",\n      },\n    ],\n  });\n\n  useEffect(() => {\n    // handleGetCategory();\n    handleGetProduct();\n  }, []);\n\n  // const handleGetCategory = () => {\n  //   setLoading((loading) => ({\n  //     ...loading,\n  //     get: true,\n  //   }));\n  //   axios({\n  //     method: \"get\",\n  //     url: `${apiDashManage + \"category\"}`,\n  //     headers: {\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n  //     },\n  //   })\n  //     .then((res) => {\n  //       console.log(\"respon get category\", res.data.categories);\n  //       setDataCategory(res.data.categories);\n  //       setLoading((loading) => ({\n  //         ...loading,\n  //         get: false,\n  //       }));\n  //     })\n  //     .catch((err) => {\n  //       setLoading((loading) => ({\n  //         ...loading,\n  //         get: false,\n  //       }));\n  //       Swal.fire({\n  //         icon: \"error\",\n  //         title: \"Check your connections\",\n  //         text: \"\",\n  //       });\n  //     });\n  // };\n  const handleGetProduct = () => {\n    setLoading((loading) => ({\n      ...loading,\n      get: true,\n    }));\n    axios({\n      method: \"get\",\n      url: `${apiDashManage + \"product\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => {\n        setDataProduct(res.data.products);\n        setLoading((loading) => ({\n          ...loading,\n          get: false,\n        }));\n      })\n      .catch((err) => {\n        setLoading((loading) => ({\n          ...loading,\n          get: false,\n        }));\n        Swal.fire({\n          icon: \"error\",\n          title: \"Check your connections\",\n          text: \"\",\n        });\n      });\n  };\n\n  return (\n    <LoadingOverlay\n      active={\n        loading.get || loading.add || loading.update || loading.delete === true\n          ? true\n          : false\n      }\n      spinner\n      text={\n        loading.get\n          ? \"loading your data...\"\n          : loading.add\n          ? \"add data...\"\n          : loading.update\n          ? \"update data...\"\n          : loading.delete\n          ? \"delete data...\"\n          : null\n      }\n    >\n      <div className={classes.root}>\n        <MaterialTable\n          className={classes.content}\n          title=\"Products\"\n          columns={state.columns}\n          data={dataProduct.map(({ categoryId, ...rest }) => {\n            return {\n              ...rest,\n              categoryId: categoryId._id,\n              categoryName: categoryId.name,\n            };\n          })}\n          editable={{\n            onRowAdd: (newData) =>\n              new Promise((resolve) => {\n                setLoading((loading) => ({\n                  ...loading,\n                  add: true,\n                }));\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  axios({\n                    method: \"post\",\n                    url: `${apiDashManage + \"product\"}`,\n                    headers: {\n                      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n                    },\n                    data: newData,\n                  })\n                    .then((res) => {\n                      Swal.fire(\"Added Success\", \"\", \"success\");\n                      handleGetProduct();\n                      setLoading((loading) => ({\n                        ...loading,\n                        add: false,\n                      }));\n                    })\n                    .catch((err) => {\n                      setLoading((loading) => ({\n                        ...loading,\n                        add: false,\n                      }));\n                      Swal.fire({\n                        icon: \"error\",\n                        title: \"Check your connections\",\n                        text: \"\",\n                      });\n                    });\n                  return { ...prevState, data };\n                });\n              }),\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve) => {\n                setLoading((loading) => ({\n                  ...loading,\n                  update: true,\n                }));\n                setTimeout(() => {\n                  resolve();\n                  if (oldData) {\n                    setState((prevState) => {\n                      const data = [...prevState.data];\n                      axios({\n                        method: \"put\",\n                        url: `${apiDashManage + \"product\"}`,\n                        headers: {\n                          Authorization:\n                            \"Bearer \" + localStorage.getItem(\"token\"),\n                        },\n                        data: {\n                          name: newData.name,\n                          price: newData.price,\n                          stock: newData.stock,\n                          description: newData.description,\n                          imgUrl: newData.imgUrl,\n                          categoryId: newData.categoryId,\n                          id: newData._id,\n                        },\n                      })\n                        .then((res) => {\n                          Swal.fire(\"Update Success\", \"\", \"success\");\n                          handleGetProduct();\n                          setLoading((loading) => ({\n                            ...loading,\n                            update: false,\n                          }));\n                        })\n                        .catch((err) => {\n                          setLoading((loading) => ({\n                            ...loading,\n                            update: false,\n                          }));\n                          Swal.fire({\n                            icon: \"error\",\n                            title: \"Check your connections\",\n                            text: \"\",\n                          });\n                        });\n                      return { ...prevState, data };\n                    });\n                  }\n                }, 600);\n              }),\n            onRowDelete: (oldData) =>\n              new Promise((resolve) => {\n                setLoading((loading) => ({\n                  ...loading,\n                  delete: true,\n                }));\n                setTimeout(() => {\n                  resolve();\n                  setState((prevState) => {\n                    const data = [...prevState.data];\n                    axios({\n                      method: \"delete\",\n                      url: `${apiDashManage + `${\"product/\" + oldData._id}`}`,\n                      headers: {\n                        Authorization:\n                          \"Bearer \" + localStorage.getItem(\"token\"),\n                      },\n                      data: oldData,\n                    })\n                      .then((res) => {\n                        Swal.fire(\"Delete Success\", \"\", \"success\");\n                        handleGetProduct();\n                        setLoading((loading) => ({\n                          ...loading,\n                          delete: false,\n                        }));\n                      })\n                      .catch((err) => {\n                        setLoading((loading) => ({\n                          ...loading,\n                          delete: false,\n                        }));\n                        Swal.fire({\n                          icon: \"error\",\n                          title: \"Check your connections\",\n                          text: \"\",\n                        });\n                      });\n                    return { ...prevState, data };\n                  });\n                }, 600);\n              }),\n          }}\n          options={{\n            headerStyle: {\n              fontSize: \"15px\",\n              fontWeight: \"bold\",\n              borderRight: \"1px solid #fff\",\n              background: \"#358A7C\",\n              color: \"#fff\",\n            },\n            rowStyle: {\n              fontFamily: \"Roboto,Helvetica,Arial,sans-serif\",\n            },\n            exportButton: true,\n          }}\n          detailPanel={(rowData) => {\n            return (\n              <img\n                style={{\n                  width: \"25%\",\n                  height: \"250px\",\n                  display: \"block\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  marginTop: \"10px\",\n                  marginBottom: \"10px\",\n                }}\n                src=\"https://images.unsplash.com/photo-1495231916356-a86217efff12?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=676&q=80\"\n              />\n            );\n          }}\n          onRowClick={(event, rowData, togglePanel) => togglePanel()}\n        />\n      </div>\n    </LoadingOverlay>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}