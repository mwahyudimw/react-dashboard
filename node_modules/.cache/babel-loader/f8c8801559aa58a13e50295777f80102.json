{"ast":null,"code":"import _objectSpread from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/views/Account/components/AccountDetails/AccountDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardHeader, CardContent, CardActions, Divider, Grid, Button, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../../../api/api\";\nimport Swal from \"sweetalert2\";\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst AccountDetails = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataUser = _useState2[0],\n        setDataUser = _useState2[1];\n\n  const _useState3 = useState({\n    username: \"\",\n    email: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        values = _useState4[0],\n        setValues = _useState4[1];\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  useEffect(() => {\n    handleGetDataUser();\n    const user = JSON.parse(localStorage.getItem(\"data\"));\n    setValues(values => _objectSpread({}, values, {\n      username: user.username,\n      email: user.email\n    }));\n    setDataUser(JSON.parse(localStorage.getItem(\"data\")));\n  }, []);\n  useEffect(() => {\n    console.log(\"dataUsersssssss\", dataUser);\n  }, [dataUser]);\n\n  const handleGetDataUser = () => {\n    axios({\n      method: \"get\",\n      url: \"\".concat(apiDashManage + \"users\"),\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      console.log(\"dataUser\", res);\n    });\n  };\n\n  const handleUpdateUser = () => {\n    axios({\n      method: \"put\",\n      url: \"\".concat(apiDashManage + \"update/user\"),\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      },\n      data: values\n    }).then(res => {\n      localStorage.setItem(\"data\", JSON.stringify(res.data.user));\n      Swal.fire(\"Good job!\", \"Update success\", \"success\");\n      console.log(\"update user\", res);\n    }).catch(err => {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Check your connections\",\n        text: \"\"\n      });\n    });\n  };\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    subheader: \"The information can be edited\",\n    title: \"Profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"username\",\n    margin: \"dense\",\n    name: \"username\",\n    onChange: handleChange,\n    required: true,\n    value: values.username,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Email Address\",\n    margin: \"dense\",\n    name: \"email\",\n    onChange: handleChange,\n    required: true,\n    value: values.email,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleUpdateUser,\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Save details\"))));\n};\n\nAccountDetails.propTypes = {\n  className: PropTypes.string\n};\nexport default AccountDetails;","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/views/Account/components/AccountDetails/AccountDetails.js"],"names":["React","useState","useEffect","clsx","PropTypes","makeStyles","Card","CardHeader","CardContent","CardActions","Divider","Grid","Button","TextField","axios","apiDashManage","Swal","useStyles","root","AccountDetails","props","className","rest","classes","dataUser","setDataUser","username","email","values","setValues","handleChange","event","target","name","value","handleGetDataUser","user","JSON","parse","localStorage","getItem","console","log","method","url","headers","Authorization","then","res","handleUpdateUser","data","setItem","stringify","fire","catch","err","icon","title","text","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../../../api/api\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nconst AccountDetails = (props) => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const [dataUser, setDataUser] = useState([]);\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  useEffect(() => {\n    handleGetDataUser();\n    const user = JSON.parse(localStorage.getItem(\"data\"));\n    setValues((values) => ({\n      ...values,\n      username: user.username,\n      email: user.email,\n    }));\n    setDataUser(JSON.parse(localStorage.getItem(\"data\")));\n  }, []);\n\n  useEffect(() => {\n    console.log(\"dataUsersssssss\", dataUser);\n  }, [dataUser]);\n\n  const handleGetDataUser = () => {\n    axios({\n      method: \"get\",\n      url: `${apiDashManage + \"users\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n    }).then((res) => {\n      console.log(\"dataUser\", res);\n    });\n  };\n\n  const handleUpdateUser = () => {\n    axios({\n      method: \"put\",\n      url: `${apiDashManage + \"update/user\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n      data: values,\n    })\n      .then((res) => {\n        localStorage.setItem(\"data\", JSON.stringify(res.data.user));\n        Swal.fire(\"Good job!\", \"Update success\", \"success\");\n        console.log(\"update user\", res);\n      })\n      .catch((err) => {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Check your connections\",\n          text: \"\",\n        });\n      });\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <form autoComplete=\"off\" noValidate>\n        <CardHeader subheader=\"The information can be edited\" title=\"Profile\" />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"username\"\n                margin=\"dense\"\n                name=\"username\"\n                onChange={handleChange}\n                required\n                value={values.username}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                margin=\"dense\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            onClick={handleUpdateUser}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nAccountDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AccountDetails;\n"]},"metadata":{},"sourceType":"module"}