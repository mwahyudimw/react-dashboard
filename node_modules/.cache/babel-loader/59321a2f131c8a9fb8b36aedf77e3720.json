{"ast":null,"code":"var _jsxFileName = \"/home/mronoyy/Documents/project/react-dashboard/src/context/tentangContext.js\";\nimport React from \"react\";\nimport { apiDashManage } from \"../api/api\";\nimport axios from \"axios\";\nlet ContextType;\nconst {\n  Provider,\n  Consumer\n} = ContextType = React.createContext();\n\nclass TentangProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tentangkami: [],\n      snackbar: {\n        loadArticle: true,\n        open: false,\n        title: \"\",\n        severity: \"\",\n        vertical: \"top\",\n        horizontal: \"right\"\n      }\n    };\n\n    this.getTentangKami = () => {\n      axios.get(`${apiDashManage}tentang-kami`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => {\n        if (res.data.portalWebs.length <= 0) {\n          this.setState(prevState => ({\n            snackbar: { ...prevState.snackbar,\n              open: true,\n              title: \"Your tentang-kami empty, please make first description !\",\n              severity: \"info\",\n              loadArticle: false\n            }\n          }));\n        } else {\n          this.setState({\n            tentangkami: res.data.portalWebs\n          });\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.onClose = () => {\n      this.setState(prevState => ({\n        snackbar: { ...prevState.snackbar,\n          open: false\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.getTentangKami();\n  }\n\n  render() {\n    const {\n      state,\n      onClose\n    } = this;\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Provider, {\n      value: { ...state,\n        onClose: onClose\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nexport { Provider, Consumer, TentangProvider };","map":{"version":3,"sources":["/home/mronoyy/Documents/project/react-dashboard/src/context/tentangContext.js"],"names":["React","apiDashManage","axios","ContextType","Provider","Consumer","createContext","TentangProvider","Component","state","tentangkami","snackbar","loadArticle","open","title","severity","vertical","horizontal","getTentangKami","get","headers","Authorization","localStorage","getItem","then","res","data","portalWebs","length","setState","prevState","catch","err","console","log","onClose","componentDidMount","render","children","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,WAAJ;AACA,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA0BF,WAAW,GAAGH,KAAK,CAACM,aAAN,EAA9C;;AAEA,MAAMC,eAAN,SAA8BP,KAAK,CAACQ,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC5CC,KAD4C,GACpC;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,WAAW,EAAE,IADL;AAERC,QAAAA,IAAI,EAAE,KAFE;AAGRC,QAAAA,KAAK,EAAE,EAHC;AAIRC,QAAAA,QAAQ,EAAE,EAJF;AAKRC,QAAAA,QAAQ,EAAE,KALF;AAMRC,QAAAA,UAAU,EAAE;AANJ;AAFJ,KADoC;;AAAA,SAiB5CC,cAjB4C,GAiB3B,MAAM;AACrBhB,MAAAA,KAAK,CACFiB,GADH,CACQ,GAAElB,aAAc,cADxB,EACuC;AACnCmB,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADhD;AAD0B,OADvC,EAMGC,IANH,CAMSC,GAAD,IAAS;AACb,YAAIA,GAAG,CAACC,IAAJ,CAASC,UAAT,CAAoBC,MAApB,IAA8B,CAAlC,EAAqC;AACnC,eAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BnB,YAAAA,QAAQ,EAAE,EACR,GAAGmB,SAAS,CAACnB,QADL;AAERE,cAAAA,IAAI,EAAE,IAFE;AAGRC,cAAAA,KAAK,EAAE,0DAHC;AAIRC,cAAAA,QAAQ,EAAE,MAJF;AAKRH,cAAAA,WAAW,EAAE;AALL;AADkB,WAAhB,CAAd;AASD,SAVD,MAUO;AACL,eAAKiB,QAAL,CAAc;AACZnB,YAAAA,WAAW,EAAEe,GAAG,CAACC,IAAJ,CAASC;AADV,WAAd;AAGD;AACF,OAtBH,EAuBGI,KAvBH,CAuBUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAvBlB;AAwBD,KA1C2C;;AAAA,SA4C5CG,OA5C4C,GA4ClC,MAAM;AACd,WAAKN,QAAL,CAAeC,SAAD,KAAgB;AAC5BnB,QAAAA,QAAQ,EAAE,EACR,GAAGmB,SAAS,CAACnB,QADL;AAERE,UAAAA,IAAI,EAAE;AAFE;AADkB,OAAhB,CAAd;AAMD,KAnD2C;AAAA;;AAa5CuB,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,cAAL;AACD;;AAsCDmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE5B,MAAAA,KAAF;AAAS0B,MAAAA;AAAT,QAAqB,IAA3B;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,wBACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,EACL,GAAG9B,KADE;AAEL0B,QAAAA,OAAO,EAAEA;AAFJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGG,QANH,CADF;AAUD;;AAlE2C;;AAqE9C,SAASlC,QAAT,EAAmBC,QAAnB,EAA6BE,eAA7B","sourcesContent":["import React from \"react\";\nimport { apiDashManage } from \"../api/api\";\nimport axios from \"axios\";\n\nlet ContextType;\nconst { Provider, Consumer } = (ContextType = React.createContext());\n\nclass TentangProvider extends React.Component {\n  state = {\n    tentangkami: [],\n    snackbar: {\n      loadArticle: true,\n      open: false,\n      title: \"\",\n      severity: \"\",\n      vertical: \"top\",\n      horizontal: \"right\",\n    },\n  };\n\n  componentDidMount() {\n    this.getTentangKami();\n  }\n\n  getTentangKami = () => {\n    axios\n      .get(`${apiDashManage}tentang-kami`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((res) => {\n        if (res.data.portalWebs.length <= 0) {\n          this.setState((prevState) => ({\n            snackbar: {\n              ...prevState.snackbar,\n              open: true,\n              title: \"Your tentang-kami empty, please make first description !\",\n              severity: \"info\",\n              loadArticle: false,\n            },\n          }));\n        } else {\n          this.setState({\n            tentangkami: res.data.portalWebs,\n          });\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onClose = () => {\n    this.setState((prevState) => ({\n      snackbar: {\n        ...prevState.snackbar,\n        open: false,\n      },\n    }));\n  };\n\n  render() {\n    const { state, onClose } = this;\n    const { children } = this.props;\n    return (\n      <Provider\n        value={{\n          ...state,\n          onClose: onClose,\n        }}\n      >\n        {children}\n      </Provider>\n    );\n  }\n}\n\nexport { Provider, Consumer, TentangProvider };\n"]},"metadata":{},"sourceType":"module"}