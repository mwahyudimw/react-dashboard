{"ast":null,"code":"var _jsxFileName = \"/home/mronoyy/Documents/project/react-dashboard/src/context/articleContext.js\";\n// import React from \"react\";\n// export const ArticleContext = React.createContext();\n// export const ArticleProvider = (props) => {\n//   const [article, setArticle] = React.useState([]);\n//   return (\n//     <ArticleContext.Provider value={[article, setArticle]}>\n//       {props.children}\n//     </ArticleContext.Provider>\n//   );\n// };\nimport React from \"react\";\nimport { apiDashManage } from \"../api/api\";\nimport axios from \"axios\";\nlet ContextType;\nconst {\n  Provider,\n  Consumer\n} = ContextType = React.createContext();\n\nclass ArticleProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      article: [],\n      snackbar: {\n        loadArticle: true,\n        open: false,\n        title: \"\",\n        severity: \"\",\n        vertical: \"top\",\n        horizontal: \"right\"\n      }\n    };\n\n    this.fetchArticle = async () => {\n      const response = await axios({\n        method: \"get\",\n        url: `${apiDashManage}article`,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      const responseJson = await response;\n\n      if (responseJson.error) {\n        // setState((state) => ({\n        //   ...state,\n        //   open: true,\n        //   title: \"Your article empty , please make first article !\",\n        //   severity: \"info\",\n        // }));\n        this.setState({\n          snackbar: {\n            open: true,\n            title: \"Your article empty, please make first article !\",\n            severity: \"info\"\n          }\n        });\n      } else {\n        // setState((state) => ({\n        //   ...state,\n        //   open: false,\n        //   loadArticle: false,\n        // }));\n        // setArticle(responseJson.data.articles);\n        this.setState({\n          article: responseJson.data.articles,\n          snackbar: {\n            open: false,\n            loadArticle: false\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchArticle();\n  }\n\n  render() {\n    const {\n      state,\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Provider, {\n      value: { ...state\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nexport { Provider, Consumer, ContextType, ArticleProvider };","map":{"version":3,"sources":["/home/mronoyy/Documents/project/react-dashboard/src/context/articleContext.js"],"names":["React","apiDashManage","axios","ContextType","Provider","Consumer","createContext","ArticleProvider","Component","state","article","snackbar","loadArticle","open","title","severity","vertical","horizontal","fetchArticle","response","method","url","headers","Authorization","localStorage","getItem","responseJson","error","setState","data","articles","componentDidMount","render","children","props"],"mappings":";AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,WAAJ;AACA,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA0BF,WAAW,GAAGH,KAAK,CAACM,aAAN,EAA9C;;AAEA,MAAMC,eAAN,SAA8BP,KAAK,CAACQ,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC5CC,KAD4C,GACpC;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,WAAW,EAAE,IADL;AAERC,QAAAA,IAAI,EAAE,KAFE;AAGRC,QAAAA,KAAK,EAAE,EAHC;AAIRC,QAAAA,QAAQ,EAAE,EAJF;AAKRC,QAAAA,QAAQ,EAAE,KALF;AAMRC,QAAAA,UAAU,EAAE;AANJ;AAFJ,KADoC;;AAAA,SAiB5CC,YAjB4C,GAiB7B,YAAY;AACzB,YAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAAC;AAC3BkB,QAAAA,MAAM,EAAE,KADmB;AAE3BC,QAAAA,GAAG,EAAG,GAAEpB,aAAc,SAFK;AAG3BqB,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADhD;AAHkB,OAAD,CAA5B;AAOA,YAAMC,YAAY,GAAG,MAAMP,QAA3B;;AACA,UAAIO,YAAY,CAACC,KAAjB,EAAwB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAKC,QAAL,CAAc;AACZjB,UAAAA,QAAQ,EAAE;AACRE,YAAAA,IAAI,EAAE,IADE;AAERC,YAAAA,KAAK,EAAE,iDAFC;AAGRC,YAAAA,QAAQ,EAAE;AAHF;AADE,SAAd;AAOD,OAdD,MAcO;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAKa,QAAL,CAAc;AACZlB,UAAAA,OAAO,EAAEgB,YAAY,CAACG,IAAb,CAAkBC,QADf;AAEZnB,UAAAA,QAAQ,EAAE;AACRE,YAAAA,IAAI,EAAE,KADE;AAERD,YAAAA,WAAW,EAAE;AAFL;AAFE,SAAd;AAOD;AACF,KAvD2C;AAAA;;AAa5CmB,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,YAAL;AACD;;AA0CDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvB,MAAAA,KAAF;AAASwB,MAAAA;AAAT,QAAsB,KAAKC,KAAjC;AACA,wBACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,EACL,GAAGzB;AADE,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGwB,QALH,CADF;AASD;;AApE2C;;AAuE9C,SAAS7B,QAAT,EAAmBC,QAAnB,EAA6BF,WAA7B,EAA0CI,eAA1C","sourcesContent":["// import React from \"react\";\n\n// export const ArticleContext = React.createContext();\n\n// export const ArticleProvider = (props) => {\n//   const [article, setArticle] = React.useState([]);\n//   return (\n//     <ArticleContext.Provider value={[article, setArticle]}>\n//       {props.children}\n//     </ArticleContext.Provider>\n//   );\n// };\n\nimport React from \"react\";\nimport { apiDashManage } from \"../api/api\";\nimport axios from \"axios\";\n\nlet ContextType;\nconst { Provider, Consumer } = (ContextType = React.createContext());\n\nclass ArticleProvider extends React.Component {\n  state = {\n    article: [],\n    snackbar: {\n      loadArticle: true,\n      open: false,\n      title: \"\",\n      severity: \"\",\n      vertical: \"top\",\n      horizontal: \"right\",\n    },\n  };\n\n  componentDidMount() {\n    this.fetchArticle();\n  }\n\n  fetchArticle = async () => {\n    const response = await axios({\n      method: \"get\",\n      url: `${apiDashManage}article`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    });\n    const responseJson = await response;\n    if (responseJson.error) {\n      // setState((state) => ({\n      //   ...state,\n      //   open: true,\n      //   title: \"Your article empty , please make first article !\",\n      //   severity: \"info\",\n      // }));\n      this.setState({\n        snackbar: {\n          open: true,\n          title: \"Your article empty, please make first article !\",\n          severity: \"info\",\n        },\n      });\n    } else {\n      // setState((state) => ({\n      //   ...state,\n      //   open: false,\n      //   loadArticle: false,\n      // }));\n      // setArticle(responseJson.data.articles);\n      this.setState({\n        article: responseJson.data.articles,\n        snackbar: {\n          open: false,\n          loadArticle: false,\n        },\n      });\n    }\n  };\n\n  render() {\n    const { state, children } = this.props;\n    return (\n      <Provider\n        value={{\n          ...state,\n        }}\n      >\n        {children}\n      </Provider>\n    );\n  }\n}\n\nexport { Provider, Consumer, ContextType, ArticleProvider };\n"]},"metadata":{},"sourceType":"module"}