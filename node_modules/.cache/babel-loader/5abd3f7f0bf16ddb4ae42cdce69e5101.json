{"ast":null,"code":"import _objectSpread from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/views/Account/components/AccountProfile/AccountProfile.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardActions, CardContent, Avatar, Typography, Divider, Button, LinearProgress } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../../../api/api\";\nimport Swal from \"sweetalert2\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: \"flex\"\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst AccountProfile = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loading = _React$useState2[0],\n        setLoading = _React$useState2[1];\n\n  const DataUser = JSON.parse(localStorage.getItem(\"data\"));\n\n  const _useState = useState({\n    picture: \"http://dashmanage.herokuapp.com/\".concat(DataUser.picture),\n    image: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        picture = _useState2[0],\n        setPicture = _useState2[1];\n\n  const _useState3 = useState({\n    name: \"\",\n    avatar: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  useEffect(() => {\n    const DataUser = JSON.parse(localStorage.getItem(\"data\"));\n    setUser(user => _objectSpread({}, user, {\n      username: DataUser.username,\n      avatar: \"http://dashmanage.herokuapp.com/\".concat(DataUser.picture)\n    }));\n  }, [user]);\n\n  const updateImage = () => {\n    setLoading(true);\n    const formdata = new FormData();\n    formdata.append(\"image\", picture.image);\n    axios({\n      method: \"put\",\n      url: \"\".concat(apiDashManage + \"update/pict-user\"),\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      },\n      data: formdata\n    }).then(res => {\n      console.log(\"res update image\", res);\n      setLoading(false);\n      Swal.fire(\"Good job!\", \"Update success\", \"success\");\n      localStorage.setItem(\"data\", JSON.stringify(res.data.result));\n    }).catch(err => {\n      setLoading(false);\n      Swal.fire({\n        icon: \"error\",\n        title: \"Check your connections\",\n        text: \"\"\n      });\n    });\n  };\n\n  const onImageChange = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      // this.setState({\n      //   img: file,\n      //   foto: reader.result\n      // })\n      setPicture(picture => _objectSpread({}, picture, {\n        image: file,\n        picture: reader.result\n      }));\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"myform\",\n    encType: \"multipart/form-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, user.username)), React.createElement(Avatar, {\n    className: classes.avatar,\n    src: picture.picture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    style: {\n      position: \"absolute\",\n      marginTop: \"40px\"\n    },\n    type: \"file\",\n    onChange: onImageChange,\n    name: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: updateImage,\n    className: classes.uploadButton,\n    color: \"primary\",\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, loading ? \"loading...\" : \"Upload picture\"))));\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string\n};\nexport default AccountProfile;","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/views/Account/components/AccountProfile/AccountProfile.js"],"names":["React","useEffect","useState","PropTypes","clsx","moment","makeStyles","Card","CardActions","CardContent","Avatar","Typography","Divider","Button","LinearProgress","axios","apiDashManage","Swal","useStyles","theme","root","details","display","avatar","marginLeft","height","width","flexShrink","flexGrow","progress","marginTop","spacing","uploadButton","marginRight","AccountProfile","props","className","rest","classes","loading","setLoading","DataUser","JSON","parse","localStorage","getItem","picture","image","setPicture","name","user","setUser","username","updateImage","formdata","FormData","append","method","url","headers","Authorization","data","then","res","console","log","fire","setItem","stringify","result","catch","err","icon","title","text","onImageChange","e","preventDefault","reader","FileReader","file","target","files","onloadend","readAsDataURL","position","propTypes","string"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SACEC,IADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,OANF,EAOEC,MAPF,EAQEC,cARF,QASO,mBATP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAAEa,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE,EADiC;AAEvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GAF8B;AAKvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE,MADN;AAENC,IAAAA,MAAM,EAAE,GAFF;AAGNC,IAAAA,KAAK,EAAE,GAHD;AAINC,IAAAA,UAAU,EAAE,CAJN;AAKNC,IAAAA,QAAQ,EAAE;AALJ,GAL+B;AAYvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd;AADH,GAZ6B;AAevCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAEd,KAAK,CAACY,OAAN,CAAc,CAAd;AADD;AAfyB,CAAZ,CAAD,CAA5B;;AAoBA,MAAMG,cAAc,GAAIC,KAAD,IAAW;AAAA,QACxBC,SADwB,GACDD,KADC,CACxBC,SADwB;AAAA,QACVC,IADU,4BACDF,KADC;;AAGhC,QAAMG,OAAO,GAAGpB,SAAS,EAAzB;;AAHgC,0BAIFlB,KAAK,CAACE,QAAN,CAAe,KAAf,CAJE;AAAA;AAAA,QAIzBqC,OAJyB;AAAA,QAIhBC,UAJgB;;AAKhC,QAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAjB;;AALgC,oBAMF3C,QAAQ,CAAC;AACrC4C,IAAAA,OAAO,4CAAqCL,QAAQ,CAACK,OAA9C,CAD8B;AAErCC,IAAAA,KAAK,EAAE;AAF8B,GAAD,CANN;AAAA;AAAA,QAMzBD,OANyB;AAAA,QAMhBE,UANgB;;AAAA,qBAUR9C,QAAQ,CAAC;AAC/B+C,IAAAA,IAAI,EAAE,EADyB;AAE/B1B,IAAAA,MAAM,EAAE;AAFuB,GAAD,CAVA;AAAA;AAAA,QAUzB2B,IAVyB;AAAA,QAUnBC,OAVmB;;AAehClD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAjB;AACAM,IAAAA,OAAO,CAAED,IAAD,sBACHA,IADG;AAENE,MAAAA,QAAQ,EAAEX,QAAQ,CAACW,QAFb;AAGN7B,MAAAA,MAAM,4CAAqCkB,QAAQ,CAACK,OAA9C;AAHA,MAAD,CAAP;AAKD,GAPQ,EAON,CAACI,IAAD,CAPM,CAAT;;AASA,QAAMG,WAAW,GAAG,MAAM;AACxBb,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMc,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBV,OAAO,CAACC,KAAjC;AACAhC,IAAAA,KAAK,CAAC;AACJ0C,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,YAAK1C,aAAa,GAAG,kBAArB,CAFC;AAGJ2C,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYhB,YAAY,CAACC,OAAb,CAAqB,OAArB;AADpB,OAHL;AAMJgB,MAAAA,IAAI,EAAEP;AANF,KAAD,CAAL,CAQGQ,IARH,CAQSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC;AACAvB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAvB,MAAAA,IAAI,CAACiD,IAAL,CAAU,WAAV,EAAuB,gBAAvB,EAAyC,SAAzC;AACAtB,MAAAA,YAAY,CAACuB,OAAb,CAAqB,MAArB,EAA6BzB,IAAI,CAAC0B,SAAL,CAAeL,GAAG,CAACF,IAAJ,CAASQ,MAAxB,CAA7B;AACD,KAbH,EAcGC,KAdH,CAcUC,GAAD,IAAS;AACd/B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAvB,MAAAA,IAAI,CAACiD,IAAL,CAAU;AACRM,QAAAA,IAAI,EAAE,OADE;AAERC,QAAAA,KAAK,EAAE,wBAFC;AAGRC,QAAAA,IAAI,EAAE;AAHE,OAAV;AAKD,KArBH;AAsBD,GA1BD;;AA4BA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,QAAIC,IAAI,GAAGJ,CAAC,CAACK,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;;AAEAJ,IAAAA,MAAM,CAACK,SAAP,GAAmB,MAAM;AACvB;AACA;AACA;AACA;AACAnC,MAAAA,UAAU,CAAEF,OAAD,sBACNA,OADM;AAETC,QAAAA,KAAK,EAAEiC,IAFE;AAGTlC,QAAAA,OAAO,EAAEgC,MAAM,CAACT;AAHP,QAAD,CAAV;AAKD,KAVD;;AAYAS,IAAAA,MAAM,CAACM,aAAP,CAAqBJ,IAArB;AACD,GAlBD;;AAmBA,SACE,oBAAC,IAAD,oBAAU3C,IAAV;AAAgB,IAAA,SAAS,EAAEjC,IAAI,CAACkC,OAAO,CAAClB,IAAT,EAAegB,SAAf,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,OAAO,EAAC,qBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACjB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG6B,IAAI,CAACE,QADR,CADF,CADF,EAME,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEd,OAAO,CAACf,MAA3B;AAAmC,IAAA,GAAG,EAAEuB,OAAO,CAACA,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AACE,IAAA,KAAK,EAAE;AAAEuC,MAAAA,QAAQ,EAAE,UAAZ;AAAwBvD,MAAAA,SAAS,EAAE;AAAnC,KADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAE6C,aAHZ;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF,EAiBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAkBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEtB,WADX;AAEE,IAAA,SAAS,EAAEf,OAAO,CAACN,YAFrB;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGO,OAAO,GAAG,YAAH,GAAkB,gBAN5B,CADF,CAlBF,CADF,CADF;AAiCD,CAxGD;;AA0GAL,cAAc,CAACoD,SAAf,GAA2B;AACzBlD,EAAAA,SAAS,EAAEjC,SAAS,CAACoF;AADI,CAA3B;AAIA,eAAerD,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Typography,\n  Divider,\n  Button,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../../../api/api\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  details: {\n    display: \"flex\",\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0,\n  },\n  progress: {\n    marginTop: theme.spacing(2),\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst AccountProfile = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const DataUser = JSON.parse(localStorage.getItem(\"data\"));\n  const [picture, setPicture] = useState({\n    picture: `http://dashmanage.herokuapp.com/${DataUser.picture}`,\n    image: \"\",\n  });\n  const [user, setUser] = useState({\n    name: \"\",\n    avatar: \"\",\n  });\n\n  useEffect(() => {\n    const DataUser = JSON.parse(localStorage.getItem(\"data\"));\n    setUser((user) => ({\n      ...user,\n      username: DataUser.username,\n      avatar: `http://dashmanage.herokuapp.com/${DataUser.picture}`,\n    }));\n  }, [user]);\n\n  const updateImage = () => {\n    setLoading(true);\n    const formdata = new FormData();\n    formdata.append(\"image\", picture.image);\n    axios({\n      method: \"put\",\n      url: `${apiDashManage + \"update/pict-user\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n      data: formdata,\n    })\n      .then((res) => {\n        console.log(\"res update image\", res);\n        setLoading(false);\n        Swal.fire(\"Good job!\", \"Update success\", \"success\");\n        localStorage.setItem(\"data\", JSON.stringify(res.data.result));\n      })\n      .catch((err) => {\n        setLoading(false);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Check your connections\",\n          text: \"\",\n        });\n      });\n  };\n\n  const onImageChange = (e) => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      // this.setState({\n      //   img: file,\n      //   foto: reader.result\n      // })\n      setPicture((picture) => ({\n        ...picture,\n        image: file,\n        picture: reader.result,\n      }));\n    };\n\n    reader.readAsDataURL(file);\n  };\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <form id=\"myform\" encType=\"multipart/form-data\">\n        <CardContent>\n          <div className={classes.details}>\n            <div>\n              <Typography gutterBottom variant=\"h2\">\n                {user.username}\n              </Typography>\n            </div>\n            <Avatar className={classes.avatar} src={picture.picture} />\n            <input\n              style={{ position: \"absolute\", marginTop: \"40px\" }}\n              type=\"file\"\n              onChange={onImageChange}\n              name=\"image\"\n            />\n          </div>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            onClick={updateImage}\n            className={classes.uploadButton}\n            color=\"primary\"\n            variant=\"text\"\n          >\n            {loading ? \"loading...\" : \"Upload picture\"}\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AccountProfile;\n"]},"metadata":{},"sourceType":"module"}