{"ast":null,"code":"import _objectSpread from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/views/Category/Category.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../api/api\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(0.5)\n  },\n  content: {\n    marginTop: theme.spacing(0)\n  }\n}));\nexport default function Categeory() {\n  const classes = useStyles();\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        token = _useState2[0],\n        setToken = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        nameCategory = _useState4[0],\n        setNameCategory = _useState4[1];\n\n  const _useState5 = useState({\n    columns: [{\n      title: \"Name\",\n      field: \"name\"\n    }],\n    data: [{\n      name: \"Daun\"\n    }, {\n      name: \"Pohon\"\n    }, {\n      name: \"Lontong\"\n    }]\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        state = _useState6[0],\n        setState = _useState6[1];\n\n  useEffect(() => {\n    setToken(localStorage.getItem(\"token\"));\n    handleGetCategory();\n  }, [token]);\n\n  const handleGetCategory = () => {\n    axios({\n      method: \"get\",\n      url: \"\".concat(apiDashManage + \"category\"),\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(res => {\n      console.log(\"respon get category\", res.data.categories);\n      setNameCategory(res.data.categories);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    className: classes.content,\n    title: \"Category\",\n    columns: state.columns,\n    data: nameCategory,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      })\n    },\n    options: {\n      headerStyle: {\n        fontSize: \"15px\",\n        fontWeight: \"bold\",\n        borderRight: \"1px solid #fff\",\n        background: \"#358A7C\",\n        color: \"#fff\"\n      },\n      rowStyle: {\n        fontFamily: \"Roboto,Helvetica,Arial,sans-serif\"\n      },\n      exportButton: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/views/Category/Category.js"],"names":["React","useState","useEffect","makeStyles","MaterialTable","axios","apiDashManage","useStyles","theme","root","padding","spacing","content","marginTop","Categeory","classes","token","setToken","nameCategory","setNameCategory","columns","title","field","data","name","state","setState","localStorage","getItem","handleGetCategory","method","url","headers","Authorization","then","res","console","log","categories","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","headerStyle","fontSize","fontWeight","borderRight","background","color","rowStyle","fontFamily","exportButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../api/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(0.5),\n  },\n  content: {\n    marginTop: theme.spacing(0),\n  },\n}));\n\nexport default function Categeory() {\n  const classes = useStyles();\n  const [token, setToken] = useState(\"\");\n  const [nameCategory, setNameCategory] = useState([]);\n  const [state, setState] = useState({\n    columns: [{ title: \"Name\", field: \"name\" }],\n    data: [\n      {\n        name: \"Daun\",\n      },\n      {\n        name: \"Pohon\",\n      },\n      {\n        name: \"Lontong\",\n      },\n    ],\n  });\n\n  useEffect(() => {\n    setToken(localStorage.getItem(\"token\"));\n    handleGetCategory();\n  }, [token]);\n\n  const handleGetCategory = () => {\n    axios({\n      method: \"get\",\n      url: `${apiDashManage + \"category\"}`,\n      headers: {\n        Authorization: \"Bearer \" + token,\n      },\n    }).then((res) => {\n      console.log(\"respon get category\", res.data.categories);\n      setNameCategory(res.data.categories);\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        className={classes.content}\n        title=\"Category\"\n        columns={state.columns}\n        data={nameCategory}\n        editable={{\n          onRowAdd: (newData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data.push(newData);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                if (oldData) {\n                  setState((prevState) => {\n                    const data = [...prevState.data];\n                    data[data.indexOf(oldData)] = newData;\n                    return { ...prevState, data };\n                  });\n                }\n              }, 600);\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data.splice(data.indexOf(oldData), 1);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n        }}\n        options={{\n          headerStyle: {\n            fontSize: \"15px\",\n            fontWeight: \"bold\",\n            borderRight: \"1px solid #fff\",\n            background: \"#358A7C\",\n            color: \"#fff\",\n          },\n          rowStyle: {\n            fontFamily: \"Roboto,Helvetica,Arial,sans-serif\",\n          },\n          exportButton: true,\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}