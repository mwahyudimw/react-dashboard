{"ast":null,"code":"import _objectSpread from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/views/Category/Category.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MaterialTable from \"material-table\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(0.5)\n  },\n  content: {\n    marginTop: theme.spacing(0)\n  }\n}));\nexport default function Categeory() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    columns: [{\n      title: \"Name\",\n      field: \"name\"\n    }, {\n      title: \"Slug\",\n      field: \"slug\"\n    }, {\n      title: \"ID Product\",\n      field: \"productId\"\n    }],\n    data: [{\n      name: \"Daun\",\n      slug: \"das\",\n      productId: \"1\"\n    }, {\n      name: \"Pohon\",\n      slug: \"fas\",\n      productId: \"2\"\n    }, {\n      name: \"Lontong\",\n      slug: \"gas\",\n      productId: \"3\"\n    }]\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    className: classes.content,\n    title: \"Category\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      })\n    },\n    options: {\n      headerStyle: {\n        fontSize: \"15px\",\n        fontWeight: \"bold\",\n        borderRight: \"1px solid #fff\",\n        background: \"#358A7C\",\n        color: \"#fff\"\n      },\n      rowStyle: {\n        fontFamily: \"Roboto,Helvetica,Arial,sans-serif\"\n      },\n      exportButton: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n} // import React, { useState, useEffect, useContext } from \"react\";\n// import { makeStyles } from \"@material-ui/styles\";\n// import MaterialTable from \"material-table\";\n// import axios from \"axios\";\n// import { apiDashManage } from \"../../api/api\";\n// import { CategoryContext } from \"../../context/categoryContext\";\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     padding: theme.spacing(0.5),\n//   },\n//   content: {\n//     marginTop: theme.spacing(0),\n//   },\n// }));\n// export default function Categeory() {\n//   const classes = useStyles();\n//   const [categoryContext, setCategoryContext] = useContext(CategoryContext);\n//   const [nameCategory, setNameCategory] = useState([]);\n//   const [state, setState] = useState({\n//     columns: [{ title: \"Name\", field: \"name\" }],\n//     data: [\n//       {\n//         name: \"Daun\",\n//       },\n//       {\n//         name: \"Pohon\",\n//       },\n//       {\n//         name: \"Lontong\",\n//       },\n//     ],\n//   });\n//   useEffect(() => {\n//     handleGetCategory();\n//   }, []);\n//   const handleGetCategory = () => {\n//     axios({\n//       method: \"get\",\n//       url: `${apiDashManage + \"category\"}`,\n//       headers: {\n//         Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//       },\n//     }).then((res) => {\n//       // console.log(\"respon get category\", res.data.categories);\n//       setNameCategory(res.data.categories);\n//       setCategoryContext(res.data.categories);\n//     });\n//   };\n//   return (\n//     <div className={classes.root}>\n//       <MaterialTable\n//         className={classes.content}\n//         title=\"Category\"\n//         columns={state.columns}\n//         data={nameCategory}\n//         editable={{\n//           onRowAdd: (newData) =>\n//             new Promise((resolve) => {\n//               resolve();\n//               setState((prevState) => {\n//                 const data = [...prevState.data];\n//                 // data.push(newData);\n//                 axios({\n//                   method: \"post\",\n//                   url: `${apiDashManage + \"category\"}`,\n//                   headers: {\n//                     Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//                   },\n//                   data: newData,\n//                 }).then((res) => {\n//                   //   console.log(\"masuk category\", res);\n//                   handleGetCategory();\n//                 });\n//                 return { ...prevState, data };\n//               });\n//             }),\n//           onRowUpdate: (newData, oldData) =>\n//             new Promise((resolve) => {\n//               resolve();\n//               if (oldData) {\n//                 setState((prevState) => {\n//                   const data = [...prevState.data];\n//                   axios({\n//                     method: \"put\",\n//                     url: `${apiDashManage + \"category\"}`,\n//                     headers: {\n//                       Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//                     },\n//                     data: {\n//                       name: newData.name,\n//                       id: newData._id,\n//                     },\n//                   }).then((res) => {\n//                     // console.log(\"edit category\", res);\n//                     handleGetCategory();\n//                   });\n//                   return { ...prevState, data };\n//                 });\n//               }\n//             }),\n//           onRowDelete: (oldData) =>\n//             new Promise((resolve) => {\n//               resolve();\n//               setState((prevState) => {\n//                 const data = [...prevState.data];\n//                 axios({\n//                   method: \"delete\",\n//                   url: `${apiDashManage + `${\"category/\" + oldData._id}`}`,\n//                   headers: {\n//                     Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//                   },\n//                 }).then((res) => {\n//                   //   console.log(\"delete category\", res);\n//                   handleGetCategory();\n//                 });\n//                 return { ...prevState, data };\n//               });\n//             }),\n//         }}\n//         options={{\n//           headerStyle: {\n//             fontSize: \"15px\",\n//             fontWeight: \"bold\",\n//             borderRight: \"1px solid #fff\",\n//             background: \"#358A7C\",\n//             color: \"#fff\",\n//           },\n//           rowStyle: {\n//             fontFamily: \"Roboto,Helvetica,Arial,sans-serif\",\n//           },\n//           exportButton: true,\n//         }}\n//       />\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/views/Category/Category.js"],"names":["React","useState","makeStyles","MaterialTable","useStyles","theme","root","padding","spacing","content","marginTop","Categeory","classes","columns","title","field","data","name","slug","productId","state","setState","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","headerStyle","fontSize","fontWeight","borderRight","background","color","rowStyle","fontFamily","exportButton"],"mappings":"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CXC,QAAAA,QAAQ,EAAE,MADC;AAEXC,QAAAA,UAAU,EAAE,MAFD;AAGXC,QAAAA,WAAW,EAAE,gBAHF;AAIXC,QAAAA,UAAU,EAAE,SAJD;AAKXC,QAAAA,KAAK,EAAE;AALI,OADN;AAQPC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,UAAU,EAAE;AADJ,OARH;AAWPC,MAAAA,YAAY,EAAE;AAXP,KA1CX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA4DD,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MaterialTable from \"material-table\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(0.5),\n  },\n  content: {\n    marginTop: theme.spacing(0),\n  },\n}));\n\nexport default function Categeory() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    columns: [\n      { title: \"Name\", field: \"name\" },\n      { title: \"Slug\", field: \"slug\" },\n      { title: \"ID Product\", field: \"productId\" },\n    ],\n    data: [\n      {\n        name: \"Daun\",\n        slug: \"das\",\n        productId: \"1\",\n      },\n      {\n        name: \"Pohon\",\n        slug: \"fas\",\n        productId: \"2\",\n      },\n      {\n        name: \"Lontong\",\n        slug: \"gas\",\n        productId: \"3\",\n      },\n    ],\n  });\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        className={classes.content}\n        title=\"Category\"\n        columns={state.columns}\n        data={state.data}\n        editable={{\n          onRowAdd: (newData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data.push(newData);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                if (oldData) {\n                  setState((prevState) => {\n                    const data = [...prevState.data];\n                    data[data.indexOf(oldData)] = newData;\n                    return { ...prevState, data };\n                  });\n                }\n              }, 600);\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data.splice(data.indexOf(oldData), 1);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n        }}\n        options={{\n          headerStyle: {\n            fontSize: \"15px\",\n            fontWeight: \"bold\",\n            borderRight: \"1px solid #fff\",\n            background: \"#358A7C\",\n            color: \"#fff\",\n          },\n          rowStyle: {\n            fontFamily: \"Roboto,Helvetica,Arial,sans-serif\",\n          },\n          exportButton: true,\n        }}\n      />\n    </div>\n  );\n}\n\n// import React, { useState, useEffect, useContext } from \"react\";\n// import { makeStyles } from \"@material-ui/styles\";\n// import MaterialTable from \"material-table\";\n// import axios from \"axios\";\n// import { apiDashManage } from \"../../api/api\";\n// import { CategoryContext } from \"../../context/categoryContext\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     padding: theme.spacing(0.5),\n//   },\n//   content: {\n//     marginTop: theme.spacing(0),\n//   },\n// }));\n\n// export default function Categeory() {\n//   const classes = useStyles();\n//   const [categoryContext, setCategoryContext] = useContext(CategoryContext);\n//   const [nameCategory, setNameCategory] = useState([]);\n//   const [state, setState] = useState({\n//     columns: [{ title: \"Name\", field: \"name\" }],\n//     data: [\n//       {\n//         name: \"Daun\",\n//       },\n//       {\n//         name: \"Pohon\",\n//       },\n//       {\n//         name: \"Lontong\",\n//       },\n//     ],\n//   });\n\n//   useEffect(() => {\n//     handleGetCategory();\n//   }, []);\n\n//   const handleGetCategory = () => {\n//     axios({\n//       method: \"get\",\n//       url: `${apiDashManage + \"category\"}`,\n//       headers: {\n//         Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//       },\n//     }).then((res) => {\n//       // console.log(\"respon get category\", res.data.categories);\n//       setNameCategory(res.data.categories);\n//       setCategoryContext(res.data.categories);\n//     });\n//   };\n\n//   return (\n//     <div className={classes.root}>\n//       <MaterialTable\n//         className={classes.content}\n//         title=\"Category\"\n//         columns={state.columns}\n//         data={nameCategory}\n//         editable={{\n//           onRowAdd: (newData) =>\n//             new Promise((resolve) => {\n//               resolve();\n//               setState((prevState) => {\n//                 const data = [...prevState.data];\n//                 // data.push(newData);\n//                 axios({\n//                   method: \"post\",\n//                   url: `${apiDashManage + \"category\"}`,\n//                   headers: {\n//                     Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//                   },\n//                   data: newData,\n//                 }).then((res) => {\n//                   //   console.log(\"masuk category\", res);\n//                   handleGetCategory();\n//                 });\n//                 return { ...prevState, data };\n//               });\n//             }),\n//           onRowUpdate: (newData, oldData) =>\n//             new Promise((resolve) => {\n//               resolve();\n//               if (oldData) {\n//                 setState((prevState) => {\n//                   const data = [...prevState.data];\n//                   axios({\n//                     method: \"put\",\n//                     url: `${apiDashManage + \"category\"}`,\n//                     headers: {\n//                       Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//                     },\n//                     data: {\n//                       name: newData.name,\n//                       id: newData._id,\n//                     },\n//                   }).then((res) => {\n//                     // console.log(\"edit category\", res);\n//                     handleGetCategory();\n//                   });\n//                   return { ...prevState, data };\n//                 });\n//               }\n//             }),\n//           onRowDelete: (oldData) =>\n//             new Promise((resolve) => {\n//               resolve();\n//               setState((prevState) => {\n//                 const data = [...prevState.data];\n//                 axios({\n//                   method: \"delete\",\n//                   url: `${apiDashManage + `${\"category/\" + oldData._id}`}`,\n//                   headers: {\n//                     Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n//                   },\n//                 }).then((res) => {\n//                   //   console.log(\"delete category\", res);\n//                   handleGetCategory();\n//                 });\n//                 return { ...prevState, data };\n//               });\n//             }),\n//         }}\n//         options={{\n//           headerStyle: {\n//             fontSize: \"15px\",\n//             fontWeight: \"bold\",\n//             borderRight: \"1px solid #fff\",\n//             background: \"#358A7C\",\n//             color: \"#fff\",\n//           },\n//           rowStyle: {\n//             fontFamily: \"Roboto,Helvetica,Arial,sans-serif\",\n//           },\n//           exportButton: true,\n//         }}\n//       />\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}