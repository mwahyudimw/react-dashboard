{"ast":null,"code":"import _objectSpread from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/views/Account/components/AccountDetails/AccountDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardHeader, CardContent, CardActions, Divider, Grid, Button, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../../../api/api\";\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst AccountDetails = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataUser = _useState2[0],\n        setDataUser = _useState2[1];\n\n  const _useState3 = useState({\n    firstName: \"Shen\",\n    lastName: \"Zhi\",\n    email: \"shen.zhi@devias.io\",\n    phone: \"98988989\",\n    state: \"Alabama\",\n    country: \"USA\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        values = _useState4[0],\n        setValues = _useState4[1];\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const states = [{\n    value: \"alabama\",\n    label: \"Alabama\"\n  }, {\n    value: \"new-york\",\n    label: \"New York\"\n  }, {\n    value: \"san-francisco\",\n    label: \"San Francisco\"\n  }];\n  useEffect(() => {\n    handleGetDataUser();\n    setDataUser(JSON.parse(localStorage.getItem(\"data\")));\n  }, []);\n\n  const handleGetDataUser = () => {\n    axios({\n      method: \"get\",\n      url: \"\".concat(apiDashManage + \"users\"),\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      console.log(\"dataUser\", res);\n    });\n  };\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    subheader: \"The information can be edited\",\n    title: \"Profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    helperText: \"Please specify the first name\",\n    label: \"First name\",\n    margin: \"dense\",\n    name: \"firstName\",\n    onChange: handleChange,\n    required: true,\n    value: values.firstName,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Last name\",\n    margin: \"dense\",\n    name: \"lastName\",\n    onChange: handleChange,\n    required: true,\n    value: values.lastName,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Email Address\",\n    margin: \"dense\",\n    name: \"email\",\n    onChange: handleChange,\n    required: true,\n    value: values.email,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Phone Number\",\n    margin: \"dense\",\n    name: \"phone\",\n    onChange: handleChange,\n    type: \"number\",\n    value: values.phone,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Select State\",\n    margin: \"dense\",\n    name: \"state\",\n    onChange: handleChange,\n    required: true,\n    select: true // eslint-disable-next-line react/jsx-sort-props\n    ,\n    SelectProps: {\n      native: true\n    },\n    value: values.state,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, states.map(option => React.createElement(\"option\", {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, option.label)))), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Country\",\n    margin: \"dense\",\n    name: \"country\",\n    onChange: handleChange,\n    required: true,\n    value: values.country,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Save details\"))));\n};\n\nAccountDetails.propTypes = {\n  className: PropTypes.string\n};\nexport default AccountDetails;","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/views/Account/components/AccountDetails/AccountDetails.js"],"names":["React","useState","useEffect","clsx","PropTypes","makeStyles","Card","CardHeader","CardContent","CardActions","Divider","Grid","Button","TextField","axios","apiDashManage","useStyles","root","AccountDetails","props","className","rest","classes","dataUser","setDataUser","firstName","lastName","email","phone","state","country","values","setValues","handleChange","event","target","name","value","states","label","handleGetDataUser","JSON","parse","localStorage","getItem","method","url","headers","Authorization","then","res","console","log","native","map","option","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../../../api/api\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nconst AccountDetails = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [dataUser, setDataUser] = useState([]);\n  const [values, setValues] = useState({\n    firstName: \"Shen\",\n    lastName: \"Zhi\",\n    email: \"shen.zhi@devias.io\",\n    phone: \"98988989\",\n    state: \"Alabama\",\n    country: \"USA\",\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const states = [\n    {\n      value: \"alabama\",\n      label: \"Alabama\",\n    },\n    {\n      value: \"new-york\",\n      label: \"New York\",\n    },\n    {\n      value: \"san-francisco\",\n      label: \"San Francisco\",\n    },\n  ];\n\n  useEffect(() => {\n    handleGetDataUser();\n    setDataUser(JSON.parse(localStorage.getItem(\"data\")));\n  }, []);\n\n  const handleGetDataUser = () => {\n    axios({\n      method: \"get\",\n      url: `${apiDashManage + \"users\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n    }).then((res) => {\n      console.log(\"dataUser\", res);\n    });\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <form autoComplete=\"off\" noValidate>\n        <CardHeader subheader=\"The information can be edited\" title=\"Profile\" />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                margin=\"dense\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                margin=\"dense\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                margin=\"dense\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                margin=\"dense\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                margin=\"dense\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                // eslint-disable-next-line react/jsx-sort-props\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Country\"\n                margin=\"dense\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button color=\"primary\" variant=\"contained\">\n            Save details\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nAccountDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AccountDetails;\n"]},"metadata":{},"sourceType":"module"}