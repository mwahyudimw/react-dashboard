{"ast":null,"code":"import _objectWithoutProperties from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/components/RouteWithLayout/RouteWithLayout.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst RouteWithLayout = props => {\n  const Layout = props.layout,\n        Component = props.component,\n        rest = _objectWithoutProperties(props, [\"layout\", \"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: matchProps => {\n      const nPath = [\"/sign-in\", \"/sign-up\"].includes(props.location.pathname);\n      localStorage.getItem(\"token\") && nPath ? React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Component, Object.assign({}, matchProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }))) : React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: {\n          pathname: \"/sign-in\",\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\nexport default RouteWithLayout;","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/components/RouteWithLayout/RouteWithLayout.js"],"names":["React","Route","Redirect","PropTypes","RouteWithLayout","props","Layout","layout","Component","component","rest","matchProps","nPath","includes","location","pathname","localStorage","getItem","state","from","propTypes","any","isRequired","path","string"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA,QACjBC,MADiB,GACyBD,KADzB,CACzBE,MADyB;AAAA,QACEC,SADF,GACyBH,KADzB,CACTI,SADS;AAAA,QACgBC,IADhB,4BACyBL,KADzB;;AAGjC,SACE,oBAAC,KAAD,oBACMK,IADN;AAEE,IAAA,MAAM,EAAGC,UAAD,IAAgB;AACtB,YAAMC,KAAK,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyBC,QAAzB,CACZR,KAAK,CAACS,QAAN,CAAeC,QADH,CAAd;AAGAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiCL,KAAjC,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,oBAAeD,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,GAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFI,UAAAA,QAAQ,EAAE,UADR;AAEFG,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAEd,KAAK,CAACS;AADP;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF;AAgBD,KAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AA0BD,CA7BD;;AA+BAV,eAAe,CAACgB,SAAhB,GAA4B;AAC1BX,EAAAA,SAAS,EAAEN,SAAS,CAACkB,GAAV,CAAcC,UADC;AAE1Bf,EAAAA,MAAM,EAAEJ,SAAS,CAACkB,GAAV,CAAcC,UAFI;AAG1BC,EAAAA,IAAI,EAAEpB,SAAS,CAACqB;AAHU,CAA5B;AAMA,eAAepB,eAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst RouteWithLayout = (props) => {\n  const { layout: Layout, component: Component, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={(matchProps) => {\n        const nPath = [\"/sign-in\", \"/sign-up\"].includes(\n          props.location.pathname\n        );\n        localStorage.getItem(\"token\") && nPath ? (\n          <Layout>\n            <Component {...matchProps} />\n          </Layout>\n        ) : (\n          <Layout>\n            <Redirect\n              to={{\n                pathname: \"/sign-in\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          </Layout>\n        );\n      }}\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string,\n};\n\nexport default RouteWithLayout;\n"]},"metadata":{},"sourceType":"module"}