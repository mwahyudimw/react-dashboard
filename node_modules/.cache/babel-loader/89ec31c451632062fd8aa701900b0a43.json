{"ast":null,"code":"var _jsxFileName = \"/home/mronoyy/Documents/project/react-dashboard/src/views/Article/components/Item.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport { apiDashManage } from \"../../../api/api\";\nimport { Consumer } from \"../../../context/articleContext\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Edit from \"./Edit\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  col: {\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"100%\",\n      flexBasis: \"100%\"\n    }\n  },\n  imgResponsive: {\n    width: 450,\n    height: 200,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\"\n    }\n  },\n  cardLayout: {\n    height: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"auto\",\n      overflow: \"hidden\"\n    }\n  }\n}));\nexport default function Item() {\n  const classes = useStyles(); // const [article, setArticle] = React.useContext(ArticleContext);\n  // const [loading, setLoading] = React.useState(false);\n  // const [state, setState] = React.useState({\n  //   loadArticle: true,\n  //   title: \"\",\n  //   severity: \"\",\n  //   open: false,\n  //   vertical: \"top\",\n  //   horizontal: \"right\",\n  // });\n\n  const [open, setOpen] = React.useState(false);\n  const data = localStorage.getItem(\"data\");\n  const parse = JSON.parse(data);\n  const user = {\n    name: parse.username,\n    avatar: `http://dashmanage.herokuapp.com/${parse.picture}`\n  }; // const fetchArticle = async () => {\n  //   const response = await axios({\n  //     method: \"get\",\n  //     url: `${apiDashManage}article`,\n  //     headers: {\n  //       Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n  //     },\n  //   });\n  //   const responseJson = await response;\n  //   if (responseJson.error) {\n  //     setState((state) => ({\n  //       ...state,\n  //       open: true,\n  //       title: \"Your article empty , please make first article !\",\n  //       severity: \"info\",\n  //     }));\n  //   } else {\n  //     setState((state) => ({\n  //       ...state,\n  //       open: false,\n  //       loadArticle: false,\n  //     }));\n  //     setArticle(responseJson.data.articles);\n  //   }\n  // };\n  // useEffect(() => {\n  //   fetchArticle();\n  // }, []);\n  // const deleteArticle = (id) => {\n  //   setLoading(true);\n  //   axios\n  //     .delete(`${apiDashManage}article/${id}`, {\n  //       headers: {\n  //         Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n  //       },\n  //     })\n  //     .then(() => {\n  //       setLoading(false);\n  //       setState((state) => ({\n  //         ...state,\n  //         open: true,\n  //         title: \"Article has been deleted !\",\n  //         severity: \"success\",\n  //       }));\n  //     })\n  //     .catch(() => {\n  //       setLoading(false);\n  //       setState((state) => ({\n  //         ...state,\n  //         open: true,\n  //         title: \"Check your connection !\",\n  //         severity: \"error\",\n  //       }));\n  //     });\n  // };\n  // const { title, severity, horizontal, vertical, loadArticle } = state;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, ({\n    article,\n    snackbar,\n    loading,\n    onClose,\n    deleteArticle\n  }) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: onClose,\n      key: snackbar.vertical + snackbar.horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: onClose,\n      severity: snackbar.severity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, snackbar.title)), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, snackbar.loadArticle ? \"loading..\" : article.map(tile => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        className: classes.col,\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        key: tile._id,\n        className: classes.cardLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          \"aria-label\": \"recipe\",\n          src: user.avatar,\n          className: classes.avatar,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 35\n          }\n        }),\n        action: /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"settings\",\n          onClick: () => setOpen(true),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(CreateIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 37\n          }\n        })),\n        title: `${tile.title}`,\n        subheader: moment(tile.createdAt).format(\"LLL\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(CardMedia, {\n        className: classes.media,\n        image: `http://dashmanage.herokuapp.com/${tile.thumbnail.imageUrl}`,\n        title: tile.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        dangerouslySetInnerHTML: {\n          __html: `${tile.description}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(CardActions, {\n        disableSpacing: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        disabled: loading,\n        onClick: () => deleteArticle(tile._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 33\n        }\n      }, loading ? \"Loading ...\" : \"DELETE\"))), /*#__PURE__*/React.createElement(Edit, {\n        open: open,\n        handleClose: () => setOpen(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 29\n        }\n      }));\n    })));\n  })));\n} // <Snackbar\n//              anchorOrigin={{ vertical, horizontal }}\n//              open={state.open}\n//              autoHideDuration={6000}\n//              onClose={() =>\n//                setState((state) => ({\n//                  ...state,\n//                  open: false,\n//                }))\n//              }\n//              key={vertical + horizontal}\n//            >\n//              <Alert\n//                onClose={() =>\n//                  setState((state) => ({\n//                    ...state,\n//                    open: false,\n//                  }))\n//                }\n//                severity={severity}\n//              >\n//                {title}\n//              </Alert>\n//            </Snackbar>\n//            <Grid container spacing={3}>\n//              {loadArticle\n//                ? \"loading..\"\n//                : article.map((tile) => {\n//                    return (\n//                      <Grid className={classes.col} item xs={6} sm={3}>\n//                        <Card key={tile._id} className={classes.cardLayout}>\n//                          <CardHeader\n//                            avatar={\n//                              <Avatar\n//                                aria-label=\"recipe\"\n//                                src={user.avatar}\n//                                className={classes.avatar}\n//                              />\n//                            }\n//                            action={\n//                              <IconButton\n//                                aria-label=\"settings\"\n//                                onClick={() => setOpen(true)}\n//                              >\n//                                <CreateIcon />\n//                              </IconButton>\n//                            }\n//                            title={`${tile.title}`}\n//                            subheader={moment(tile.createdAt).format(\"LLL\")}\n//                          />\n//                          <CardMedia\n//                            className={classes.media}\n//                            image={`http://dashmanage.herokuapp.com/${tile.thumbnail.imageUrl}`}\n//                            title={tile.title}\n//                          />\n//                          <CardContent>\n//                            <Typography\n//                              variant=\"body2\"\n//                              color=\"textSecondary\"\n//                              component=\"p\"\n//                              dangerouslySetInnerHTML={{\n//                                __html: `${tile.description}`,\n//                              }}\n//                            />\n//                          </CardContent>\n//                          <CardActions disableSpacing>\n//                            <Button\n//                              variant=\"outlined\"\n//                              color=\"secondary\"\n//                              disabled={loading}\n//                              onClick={() => deleteArticle(tile._id)}\n//                            >\n//                              {loading ? \"Loading ...\" : \"DELETE\"}\n//                            </Button>\n//                          </CardActions>\n//                        </Card>\n//                        <Edit open={open} handleClose={() => setOpen(false)} />\n//                      </Grid>\n//                    );\n//                  })}\n//            </Grid>","map":{"version":3,"sources":["/home/mronoyy/Documents/project/react-dashboard/src/views/Article/components/Item.js"],"names":["React","useEffect","makeStyles","red","apiDashManage","Consumer","Snackbar","MuiAlert","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","Grid","IconButton","Container","CreateIcon","Button","axios","moment","Edit","Alert","props","useStyles","theme","root","flexGrow","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","col","breakpoints","down","maxWidth","flexBasis","imgResponsive","width","cardLayout","overflow","Item","classes","open","setOpen","useState","data","localStorage","getItem","parse","JSON","user","name","username","picture","article","snackbar","loading","onClose","deleteArticle","vertical","horizontal","severity","title","loadArticle","map","tile","_id","createdAt","format","thumbnail","imageUrl","__html","description"],"mappings":"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AAA;AAAA;AAAA;AAAA;AAAA,QADF,CA1BF,eAoCE,oBAAC,WAAD;AAAa,QAAA,cAAc,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,QAAQ,EAAEhB,OAHZ;AAIE,QAAA,OAAO,EAAE,MAAME,aAAa,CAACO,IAAI,CAACC,GAAN,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGV,OAAO,GAAG,aAAH,GAAmB,QAN7B,CADF,CApCF,CADF,eAgDE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAEd,IADR;AAEE,QAAA,WAAW,EAAE,MAAMC,OAAO,CAAC,KAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhDF,CADF;AAuDD,KAxDD,CAHN,CAZF,CADF;AA4ED,GA9EH,CADF,CADF,CADF;AAsFD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport { apiDashManage } from \"../../../api/api\";\nimport { Consumer } from \"../../../context/articleContext\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Edit from \"./Edit\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  col: {\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"100%\",\n      flexBasis: \"100%\",\n    },\n  },\n  imgResponsive: {\n    width: 450,\n    height: 200,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  cardLayout: {\n    height: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"auto\",\n      overflow: \"hidden\",\n    },\n  },\n}));\n\nexport default function Item() {\n  const classes = useStyles();\n  // const [article, setArticle] = React.useContext(ArticleContext);\n  // const [loading, setLoading] = React.useState(false);\n  // const [state, setState] = React.useState({\n  //   loadArticle: true,\n  //   title: \"\",\n  //   severity: \"\",\n  //   open: false,\n  //   vertical: \"top\",\n  //   horizontal: \"right\",\n  // });\n  const [open, setOpen] = React.useState(false);\n  const data = localStorage.getItem(\"data\");\n  const parse = JSON.parse(data);\n\n  const user = {\n    name: parse.username,\n    avatar: `http://dashmanage.herokuapp.com/${parse.picture}`,\n  };\n\n  // const fetchArticle = async () => {\n  //   const response = await axios({\n  //     method: \"get\",\n  //     url: `${apiDashManage}article`,\n  //     headers: {\n  //       Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n  //     },\n  //   });\n  //   const responseJson = await response;\n  //   if (responseJson.error) {\n  //     setState((state) => ({\n  //       ...state,\n  //       open: true,\n  //       title: \"Your article empty , please make first article !\",\n  //       severity: \"info\",\n  //     }));\n  //   } else {\n  //     setState((state) => ({\n  //       ...state,\n  //       open: false,\n  //       loadArticle: false,\n  //     }));\n  //     setArticle(responseJson.data.articles);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   fetchArticle();\n  // }, []);\n\n  // const deleteArticle = (id) => {\n  //   setLoading(true);\n  //   axios\n  //     .delete(`${apiDashManage}article/${id}`, {\n  //       headers: {\n  //         Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n  //       },\n  //     })\n  //     .then(() => {\n  //       setLoading(false);\n  //       setState((state) => ({\n  //         ...state,\n  //         open: true,\n  //         title: \"Article has been deleted !\",\n  //         severity: \"success\",\n  //       }));\n  //     })\n  //     .catch(() => {\n  //       setLoading(false);\n  //       setState((state) => ({\n  //         ...state,\n  //         open: true,\n  //         title: \"Check your connection !\",\n  //         severity: \"error\",\n  //       }));\n  //     });\n  // };\n\n  // const { title, severity, horizontal, vertical, loadArticle } = state;\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <Consumer>\n          {({ article, snackbar, loading, onClose, deleteArticle }) => {\n            return (\n              <React.Fragment>\n                <Snackbar\n                  open={snackbar.open}\n                  autoHideDuration={6000}\n                  onClose={onClose}\n                  key={snackbar.vertical + snackbar.horizontal}\n                >\n                  <Alert onClose={onClose} severity={snackbar.severity}>\n                    {snackbar.title}\n                  </Alert>\n                </Snackbar>\n\n                <Grid container spacing={3}>\n                  {snackbar.loadArticle\n                    ? \"loading..\"\n                    : article.map((tile) => {\n                        return (\n                          <Grid className={classes.col} item xs={6} sm={3}>\n                            <Card key={tile._id} className={classes.cardLayout}>\n                              <CardHeader\n                                avatar={\n                                  <Avatar\n                                    aria-label=\"recipe\"\n                                    src={user.avatar}\n                                    className={classes.avatar}\n                                  />\n                                }\n                                action={\n                                  <IconButton\n                                    aria-label=\"settings\"\n                                    onClick={() => setOpen(true)}\n                                  >\n                                    <CreateIcon />\n                                  </IconButton>\n                                }\n                                title={`${tile.title}`}\n                                subheader={moment(tile.createdAt).format(\"LLL\")}\n                              />\n                              <CardMedia\n                                className={classes.media}\n                                image={`http://dashmanage.herokuapp.com/${tile.thumbnail.imageUrl}`}\n                                title={tile.title}\n                              />\n\n                              <CardContent>\n                                <Typography\n                                  variant=\"body2\"\n                                  color=\"textSecondary\"\n                                  component=\"p\"\n                                  dangerouslySetInnerHTML={{\n                                    __html: `${tile.description}`,\n                                  }}\n                                />\n                              </CardContent>\n                              <CardActions disableSpacing>\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"secondary\"\n                                  disabled={loading}\n                                  onClick={() => deleteArticle(tile._id)}\n                                >\n                                  {loading ? \"Loading ...\" : \"DELETE\"}\n                                </Button>\n                              </CardActions>\n                            </Card>\n                            <Edit\n                              open={open}\n                              handleClose={() => setOpen(false)}\n                            />\n                          </Grid>\n                        );\n                      })}\n                </Grid>\n              </React.Fragment>\n            );\n          }}\n        </Consumer>\n      </Container>\n    </div>\n  );\n}\n\n// <Snackbar\n//              anchorOrigin={{ vertical, horizontal }}\n//              open={state.open}\n//              autoHideDuration={6000}\n//              onClose={() =>\n//                setState((state) => ({\n//                  ...state,\n//                  open: false,\n//                }))\n//              }\n//              key={vertical + horizontal}\n//            >\n//              <Alert\n//                onClose={() =>\n//                  setState((state) => ({\n//                    ...state,\n//                    open: false,\n//                  }))\n//                }\n//                severity={severity}\n//              >\n//                {title}\n//              </Alert>\n//            </Snackbar>\n\n//            <Grid container spacing={3}>\n//              {loadArticle\n//                ? \"loading..\"\n//                : article.map((tile) => {\n//                    return (\n//                      <Grid className={classes.col} item xs={6} sm={3}>\n//                        <Card key={tile._id} className={classes.cardLayout}>\n//                          <CardHeader\n//                            avatar={\n//                              <Avatar\n//                                aria-label=\"recipe\"\n//                                src={user.avatar}\n//                                className={classes.avatar}\n//                              />\n//                            }\n//                            action={\n//                              <IconButton\n//                                aria-label=\"settings\"\n//                                onClick={() => setOpen(true)}\n//                              >\n//                                <CreateIcon />\n//                              </IconButton>\n//                            }\n//                            title={`${tile.title}`}\n//                            subheader={moment(tile.createdAt).format(\"LLL\")}\n//                          />\n//                          <CardMedia\n//                            className={classes.media}\n//                            image={`http://dashmanage.herokuapp.com/${tile.thumbnail.imageUrl}`}\n//                            title={tile.title}\n//                          />\n\n//                          <CardContent>\n//                            <Typography\n//                              variant=\"body2\"\n//                              color=\"textSecondary\"\n//                              component=\"p\"\n//                              dangerouslySetInnerHTML={{\n//                                __html: `${tile.description}`,\n//                              }}\n//                            />\n//                          </CardContent>\n//                          <CardActions disableSpacing>\n//                            <Button\n//                              variant=\"outlined\"\n//                              color=\"secondary\"\n//                              disabled={loading}\n//                              onClick={() => deleteArticle(tile._id)}\n//                            >\n//                              {loading ? \"Loading ...\" : \"DELETE\"}\n//                            </Button>\n//                          </CardActions>\n//                        </Card>\n//                        <Edit open={open} handleClose={() => setOpen(false)} />\n//                      </Grid>\n//                    );\n//                  })}\n//            </Grid>\n"]},"metadata":{},"sourceType":"module"}