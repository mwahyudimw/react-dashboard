{"ast":null,"code":"var _jsxFileName = \"/home/mronoyy/Documents/project/react-dashboard/src/views/Article/components/Item.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport { apiDashManage } from \"../../../api/api\";\nimport { ArticleContext } from \"../../../context/articleContext\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/core/Alert\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Button from \"@material-ui/core/Button\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Edit from \"./Edit\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  col: {\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"100%\",\n      flexBasis: \"100%\"\n    }\n  },\n  imgResponsive: {\n    width: 450,\n    height: 200,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\"\n    }\n  },\n  cardLayout: {\n    height: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"auto\",\n      overflow: \"hidden\"\n    }\n  }\n}));\nexport default function Item() {\n  const classes = useStyles();\n  const [article, setArticle] = React.useContext(ArticleContext);\n  const [loading, setLoading] = React.useState(false);\n  const [snackbar, setSnackBar] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const data = localStorage.getItem(\"data\");\n  const parse = JSON.parse(data);\n  const user = {\n    name: parse.username,\n    avatar: `http://dashmanage.herokuapp.com/${parse.picture}`\n  };\n  useEffect(() => {\n    const fetchArticle = async () => {\n      const response = await fetch(`${apiDashManage}article`);\n      const responseJson = await response.json();\n\n      if (responseJson.error) {\n        setSnackBar(true);\n      } else {\n        setSnackBar(false);\n        setArticle(responseJson.articles);\n      }\n    };\n\n    fetchArticle();\n  }, []);\n\n  const deleteArticle = id => {\n    setLoading(true);\n    axios.delete(`${apiDashManage}article/${id}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(() => {\n      setLoading(false);\n      Swal.fire({\n        icon: \"success\",\n        title: \"Article has been deleted !\"\n      });\n    }).catch(() => {\n      setLoading(false);\n      Swal.fire({\n        icon: \"error\",\n        title: \"Check your connections\",\n        text: \"\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    open: snackbar,\n    autoHideDuration: 6000,\n    onClose: () => setSnackBar(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: () => setSnackBar(false),\n    severity: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Artikel mafiii, silahkan buat satu artikel !\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, article.map(tile => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      className: classes.col,\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      key: tile._id,\n      className: classes.cardLayout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        \"aria-label\": \"recipe\",\n        src: user.avatar,\n        className: classes.avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 23\n        }\n      }),\n      action: /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"settings\",\n        onClick: () => setOpen(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(CreateIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }\n      })),\n      title: `${tile.title}`,\n      subheader: moment(tile.createdAt).format(\"LLL\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.media,\n      image: `http://dashmanage.herokuapp.com/${tile.thumbnail}`,\n      title: tile.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      dangerouslySetInnerHTML: {\n        __html: `${tile.description}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(CardActions, {\n      disableSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      disabled: loading,\n      onClick: () => deleteArticle(tile._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, loading ? \"Loading ...\" : \"DELETE\"))));\n  })), /*#__PURE__*/React.createElement(Edit, {\n    open: open,\n    handleClose: () => setOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/mronoyy/Documents/project/react-dashboard/src/views/Article/components/Item.js"],"names":["React","useEffect","makeStyles","red","apiDashManage","ArticleContext","Snackbar","MuiAlert","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","Grid","IconButton","Container","CreateIcon","Button","Swal","axios","moment","Edit","useStyles","theme","root","flexGrow","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","col","breakpoints","down","maxWidth","flexBasis","imgResponsive","width","cardLayout","overflow","Item","classes","article","setArticle","useContext","loading","setLoading","useState","snackbar","setSnackBar","open","setOpen","data","localStorage","getItem","parse","JSON","user","name","username","picture","fetchArticle","response","fetch","responseJson","json","error","articles","deleteArticle","id","delete","headers","Authorization","then","fire","icon","title","catch","text","map","tile","_id","createdAt","format","thumbnail","__html","description"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport { apiDashManage } from \"../../../api/api\";\nimport { ArticleContext } from \"../../../context/articleContext\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/core/Alert\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Button from \"@material-ui/core/Button\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Edit from \"./Edit\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  col: {\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"100%\",\n      flexBasis: \"100%\",\n    },\n  },\n  imgResponsive: {\n    width: 450,\n    height: 200,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  cardLayout: {\n    height: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"auto\",\n      overflow: \"hidden\",\n    },\n  },\n}));\n\nexport default function Item() {\n  const classes = useStyles();\n  const [article, setArticle] = React.useContext(ArticleContext);\n  const [loading, setLoading] = React.useState(false);\n  const [snackbar, setSnackBar] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const data = localStorage.getItem(\"data\");\n  const parse = JSON.parse(data);\n\n  const user = {\n    name: parse.username,\n    avatar: `http://dashmanage.herokuapp.com/${parse.picture}`,\n  };\n\n  useEffect(() => {\n    const fetchArticle = async () => {\n      const response = await fetch(`${apiDashManage}article`);\n      const responseJson = await response.json();\n      if (responseJson.error) {\n        setSnackBar(true);\n      } else {\n        setSnackBar(false);\n        setArticle(responseJson.articles);\n      }\n    };\n    fetchArticle();\n  }, []);\n\n  const deleteArticle = (id) => {\n    setLoading(true);\n    axios\n      .delete(`${apiDashManage}article/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then(() => {\n        setLoading(false);\n        Swal.fire({\n          icon: \"success\",\n          title: \"Article has been deleted !\",\n        });\n      })\n      .catch(() => {\n        setLoading(false);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Check your connections\",\n          text: \"\",\n        });\n      });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <Snackbar\n          open={snackbar}\n          autoHideDuration={6000}\n          onClose={() => setSnackBar(false)}\n        >\n          <Alert onClose={() => setSnackBar(false)} severity=\"warning\">\n            Artikel mafiii, silahkan buat satu artikel !\n          </Alert>\n        </Snackbar>\n\n        <Grid container spacing={3}>\n          {article.map((tile) => {\n            return (\n              <Grid className={classes.col} item xs={6} sm={3}>\n                <Card key={tile._id} className={classes.cardLayout}>\n                  <CardHeader\n                    avatar={\n                      <Avatar\n                        aria-label=\"recipe\"\n                        src={user.avatar}\n                        className={classes.avatar}\n                      />\n                    }\n                    action={\n                      <IconButton\n                        aria-label=\"settings\"\n                        onClick={() => setOpen(true)}\n                      >\n                        <CreateIcon />\n                      </IconButton>\n                    }\n                    title={`${tile.title}`}\n                    subheader={moment(tile.createdAt).format(\"LLL\")}\n                  />\n                  <CardMedia\n                    className={classes.media}\n                    image={`http://dashmanage.herokuapp.com/${tile.thumbnail}`}\n                    title={tile.title}\n                  />\n                  <CardContent>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                      dangerouslySetInnerHTML={{\n                        __html: `${tile.description}`,\n                      }}\n                    />\n                  </CardContent>\n                  <CardActions disableSpacing>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      disabled={loading}\n                      onClick={() => deleteArticle(tile._id)}\n                    >\n                      {loading ? \"Loading ...\" : \"DELETE\"}\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n\n        <Edit open={open} handleClose={() => setOpen(false)} />\n      </Container>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}