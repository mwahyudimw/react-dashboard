{"ast":null,"code":"import _objectWithoutProperties from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/views/Account/components/AccountProfile/AccountProfile.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardActions, CardContent, Avatar, Typography, Divider, Button, LinearProgress } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: \"flex\"\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst AccountProfile = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const DataUser = JSON.parse(localStorage.getItem(\"data\"));\n  const user = {\n    name: DataUser.username,\n    city: \"Los Angeles\",\n    country: \"USA\",\n    timezone: \"GTM-7\",\n    avatar: \"http://dashmanage.herokuapp.com/\".concat(DataUser.picture)\n  };\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, user.name), React.createElement(Typography, {\n    className: classes.locationText,\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, user.city, \", \", user.country), React.createElement(Typography, {\n    className: classes.dateText,\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, moment().format(\"hh:mm A\"), \" (\", user.timezone, \")\")), React.createElement(Avatar, {\n    className: classes.avatar,\n    src: user.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.uploadButton,\n    color: \"primary\",\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Upload picture\"), React.createElement(Button, {\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Remove picture\")));\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string\n};\nexport default AccountProfile;","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/views/Account/components/AccountProfile/AccountProfile.js"],"names":["React","useEffect","useState","PropTypes","clsx","moment","makeStyles","Card","CardActions","CardContent","Avatar","Typography","Divider","Button","LinearProgress","useStyles","theme","root","details","display","avatar","marginLeft","height","width","flexShrink","flexGrow","progress","marginTop","spacing","uploadButton","marginRight","AccountProfile","props","className","rest","classes","DataUser","JSON","parse","localStorage","getItem","user","name","username","city","country","timezone","picture","locationText","dateText","format","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Typography,\n  Divider,\n  Button,\n  LinearProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  details: {\n    display: \"flex\",\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0,\n  },\n  progress: {\n    marginTop: theme.spacing(2),\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst AccountProfile = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const DataUser = JSON.parse(localStorage.getItem(\"data\"));\n  const user = {\n    name: DataUser.username,\n    city: \"Los Angeles\",\n    country: \"USA\",\n    timezone: \"GTM-7\",\n    avatar: `http://dashmanage.herokuapp.com/${DataUser.picture}`,\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <div className={classes.details}>\n          <div>\n            <Typography gutterBottom variant=\"h2\">\n              {user.name}\n            </Typography>\n            <Typography\n              className={classes.locationText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {user.city}, {user.country}\n            </Typography>\n            <Typography\n              className={classes.dateText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {moment().format(\"hh:mm A\")} ({user.timezone})\n            </Typography>\n          </div>\n          <Avatar className={classes.avatar} src={user.avatar} />\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button className={classes.uploadButton} color=\"primary\" variant=\"text\">\n          Upload picture\n        </Button>\n        <Button variant=\"text\">Remove picture</Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AccountProfile;\n"]},"metadata":{},"sourceType":"module"}