{"ast":null,"code":"var _jsxFileName = \"/home/mronoyy/Documents/project/react-dashboard/src/views/Settings/components/Password/Password.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardHeader, CardContent, CardActions, Divider, Button, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../../../api/api\";\nimport Swal from \"sweetalert2\";\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Password = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: \"\",\n    confirm_password: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleConfirmPassword = () => {\n    setLoading(true);\n    axios({\n      method: \"put\",\n      url: `${apiDashManage + \"update-password\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      },\n      data: values\n    }).then(res => {\n      Swal.fire(\"Update Password Success\", \"\", \"success\");\n      setLoading(false);\n    }).catch(err => {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Please fill in correctly and check your internet connection\",\n        text: \"\"\n      });\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleConfirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    subheader: \"Update password\",\n    title: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Old Password\",\n    name: \"password\",\n    onChange: handleChange,\n    type: \"password\",\n    value: values.password,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"New Password\",\n    name: \"confirm_password\",\n    onChange: handleChange,\n    style: {\n      marginTop: \"1rem\"\n    },\n    type: \"password\",\n    value: values.confirm_password,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleConfirmPassword,\n    color: \"primary\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, loading ? \"loading...\" : \"Update Password\"))));\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\nexport default Password;","map":{"version":3,"sources":["/home/mronoyy/Documents/project/react-dashboard/src/views/Settings/components/Password/Password.js"],"names":["React","useState","PropTypes","clsx","makeStyles","Card","CardHeader","CardContent","CardActions","Divider","Button","TextField","axios","apiDashManage","Swal","useStyles","root","Password","props","className","rest","classes","values","setValues","password","confirm_password","loading","setLoading","handleChange","event","target","name","value","handleConfirmPassword","method","url","headers","Authorization","localStorage","getItem","data","then","res","fire","catch","err","icon","title","text","marginTop","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { apiDashManage } from \"../../../../api/api\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nconst Password = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    password: \"\",\n    confirm_password: \"\",\n  });\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleConfirmPassword = () => {\n    setLoading(true);\n    axios({\n      method: \"put\",\n      url: `${apiDashManage + \"update-password\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n      data: values,\n    })\n      .then((res) => {\n        Swal.fire(\"Update Password Success\", \"\", \"success\");\n        setLoading(false);\n      })\n      .catch((err) => {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Please fill in correctly and check your internet connection\",\n          text: \"\",\n        });\n        setLoading(false);\n      });\n  };\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <form onSubmit={handleConfirmPassword}>\n        <CardHeader subheader=\"Update password\" title=\"Password\" />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Old Password\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"New Password\"\n            name=\"confirm_password\"\n            onChange={handleChange}\n            style={{ marginTop: \"1rem\" }}\n            type=\"password\"\n            value={values.confirm_password}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            onClick={handleConfirmPassword}\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            {loading ? \"loading...\" : \"Update Password\"}\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Password;\n"]},"metadata":{},"sourceType":"module"}