{"ast":null,"code":"var _jsxFileName = \"/home/mwahyudi/Documents/clone/react-dashboard/src/views/UserList/components/UsersTable/UsersTable.js\";\nimport React, { useState } from 'react';\nimport MaterialTable from 'material-table';\n\nfunction UsersTable() {\n  const tableRef = React.createRef();\n  return React.createElement(MaterialTable, {\n    title: \"Users List\",\n    tableRef: tableRef,\n    columns: [{\n      title: 'Avatar',\n      field: 'avatar',\n      render: rowData => React.createElement(\"img\", {\n        style: {\n          height: 36,\n          borderRadius: '50%'\n        },\n        src: rowData.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      })\n    }, {\n      title: 'ID User',\n      field: 'id'\n    }, {\n      title: 'Email',\n      field: 'email'\n    }, {\n      title: 'First Name',\n      field: 'first_name'\n    }, {\n      title: 'Last Name',\n      field: 'last_name'\n    }],\n    data: query => new Promise((resolve, reject) => {\n      let url = 'https://reqres.in/api/users?';\n      url += 'per_page=' + query.pageSize;\n      url += '&page=' + (query.page + 1);\n      fetch(url).then(response => response.json()).then(result => {\n        resolve({\n          data: result.data,\n          page: result.page - 1,\n          totalCount: result.total\n        });\n      });\n    }),\n    actions: [{\n      icon: 'refresh',\n      tooltip: 'Refresh Data',\n      isFreeAction: true,\n      onClick: () => tableRef.current && tableRef.current.onQueryChange()\n    }],\n    options: {\n      headerStyle: {\n        fontSize: '15px',\n        fontWeight: 'bold',\n        borderRight: '1px solid #ccc'\n      },\n      rowStyle: {\n        fontFamily: 'Roboto,Helvetica,Arial,sans-serif'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n}\n\nexport default UsersTable;","map":{"version":3,"sources":["/home/mwahyudi/Documents/clone/react-dashboard/src/views/UserList/components/UsersTable/UsersTable.js"],"names":["React","useState","MaterialTable","UsersTable","tableRef","createRef","title","field","render","rowData","height","borderRadius","avatar","query","Promise","resolve","reject","url","pageSize","page","fetch","then","response","json","result","data","totalCount","total","icon","tooltip","isFreeAction","onClick","current","onQueryChange","headerStyle","fontSize","fontWeight","borderRight","rowStyle","fontFamily"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,SAAN,EAAjB;AAEA,SACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,QAAQ,EAAED,QAFZ;AAGE,IAAA,OAAO,EAAE,CACP;AACEE,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,MAAM,EAAEC,OAAO,IACb;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,YAAY,EAAE;AAA5B,SADT;AAEE,QAAA,GAAG,EAAEF,OAAO,CAACG,MAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,KADO,EAWP;AAAEN,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAXO,EAYP;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAZO,EAaP;AAAED,MAAAA,KAAK,EAAE,YAAT;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KAbO,EAcP;AAAED,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAdO,CAHX;AAmBE,IAAA,IAAI,EAAEM,KAAK,IACT,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,UAAIC,GAAG,GAAG,8BAAV;AACAA,MAAAA,GAAG,IAAI,cAAcJ,KAAK,CAACK,QAA3B;AACAD,MAAAA,GAAG,IAAI,YAAYJ,KAAK,CAACM,IAAN,GAAa,CAAzB,CAAP;AACAC,MAAAA,KAAK,CAACH,GAAD,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdT,QAAAA,OAAO,CAAC;AACNU,UAAAA,IAAI,EAAED,MAAM,CAACC,IADP;AAENN,UAAAA,IAAI,EAAEK,MAAM,CAACL,IAAP,GAAc,CAFd;AAGNO,UAAAA,UAAU,EAAEF,MAAM,CAACG;AAHb,SAAD,CAAP;AAKD,OARH;AASD,KAbD,CApBJ;AAmCE,IAAA,OAAO,EAAE,CACP;AACEC,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,OAAO,EAAE,cAFX;AAGEC,MAAAA,YAAY,EAAE,IAHhB;AAIEC,MAAAA,OAAO,EAAE,MAAM3B,QAAQ,CAAC4B,OAAT,IAAoB5B,QAAQ,CAAC4B,OAAT,CAAiBC,aAAjB;AAJrC,KADO,CAnCX;AA2CE,IAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAC;AACVC,QAAAA,QAAQ,EAAC,MADC;AACOC,QAAAA,UAAU,EAAC,MADlB;AAC0BC,QAAAA,WAAW,EAAC;AADtC,OADL;AAIPC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,UAAU,EAAC;AADH;AAJH,KA3CX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAsDD;;AAED,eAAepC,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport MaterialTable from 'material-table';\n\nfunction UsersTable() {\n  const tableRef = React.createRef();\n  \n  return (\n    <MaterialTable        \n      title=\"Users List\"\n      tableRef={tableRef}\n      columns={[\n        {\n          title: 'Avatar',\n          field: 'avatar',\n          render: rowData => (\n            <img\n              style={{ height: 36, borderRadius: '50%' }}\n              src={rowData.avatar}\n            />\n          ),\n        },\n        { title: 'ID User', field: 'id' },\n        { title: 'Email', field: 'email' },\n        { title: 'First Name', field: 'first_name'},\n        { title: 'Last Name', field: 'last_name'}\n      ]}\n      data={query =>\n        new Promise((resolve, reject) => {\n          let url = 'https://reqres.in/api/users?'\n          url += 'per_page=' + query.pageSize\n          url += '&page=' + (query.page + 1)\n          fetch(url)\n            .then(response => response.json())\n            .then(result => {\n              resolve({\n                data: result.data,\n                page: result.page - 1,\n                totalCount: result.total,\n              })\n            })\n        })\n      }\n      actions={[\n        {\n          icon: 'refresh',\n          tooltip: 'Refresh Data',\n          isFreeAction: true,\n          onClick: () => tableRef.current && tableRef.current.onQueryChange(),\n        }\n      ]}\n      options={{\n        headerStyle:{\n          fontSize:'15px', fontWeight:'bold', borderRight:'1px solid #ccc'\n        },\n        rowStyle: {\n          fontFamily:'Roboto,Helvetica,Arial,sans-serif'  \n        }\n        }}\n    />\n  )\n}\n\nexport default UsersTable;\n"]},"metadata":{},"sourceType":"module"}