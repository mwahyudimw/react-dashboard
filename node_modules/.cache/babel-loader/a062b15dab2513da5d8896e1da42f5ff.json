{"ast":null,"code":"var _jsxFileName = \"/home/mronoyy/Documents/project/react-dashboard/src/views/Article/components/Item.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport { Consumer } from \"../../../context/articleContext\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Button from \"@material-ui/core/Button\";\nimport moment from \"moment\";\nimport Edit from \"./Edit\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  col: {\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"100%\",\n      flexBasis: \"100%\"\n    }\n  },\n  imgResponsive: {\n    width: 450,\n    height: 200,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\"\n    }\n  },\n  cardLayout: {\n    height: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"auto\",\n      overflow: \"hidden\"\n    }\n  }\n}));\nexport default function Item() {\n  const classes = useStyles();\n  const [isopen, setOpen] = React.useState(false);\n  const data = localStorage.getItem(\"data\");\n  const parse = JSON.parse(data);\n  const user = {\n    name: parse.username,\n    avatar: `http://dashmanage.herokuapp.com/${parse.picture}`\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, ({\n    article,\n    snackbar,\n    loading,\n    onClose,\n    deleteArticle,\n    editArticle\n  }) => {\n    const {\n      vertical,\n      horizontal,\n      open,\n      title,\n      severity,\n      loadArticle\n    } = snackbar;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical,\n        horizontal\n      },\n      open: open,\n      autoHideDuration: 6000,\n      onClose: onClose,\n      key: vertical + horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: onClose,\n      severity: severity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, title)), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, loadArticle ? \"loading..\" : article.map(tile => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        className: classes.col,\n        item: true,\n        xs: 6,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        key: tile._id,\n        className: classes.cardLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          \"aria-label\": \"recipe\",\n          src: user.avatar,\n          className: classes.avatar,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 35\n          }\n        }),\n        action: /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"settings\",\n          onClick: () => setOpen(true),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(CreateIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 37\n          }\n        })),\n        title: `${tile.title}`,\n        subheader: moment(tile.createdAt).format(\"LLL\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(CardMedia, {\n        className: classes.media,\n        image: `http://dashmanage.herokuapp.com/${tile.thumbnail.imageUrl}`,\n        title: tile.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        dangerouslySetInnerHTML: {\n          __html: `${tile.description}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(CardActions, {\n        disableSpacing: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        disabled: loading,\n        onClick: () => deleteArticle(tile._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 33\n        }\n      }, loading ? \"Loading ...\" : \"DELETE\"))));\n    })));\n  })), /*#__PURE__*/React.createElement(Edit, {\n    openModal: isopen // editArticle={() => editArticle(tile._id)}\n    ,\n    handleClose: () => setOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }), \";\");\n}","map":{"version":3,"sources":["/home/mronoyy/Documents/project/react-dashboard/src/views/Article/components/Item.js"],"names":["React","makeStyles","red","Consumer","Snackbar","MuiAlert","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","Grid","IconButton","Container","CreateIcon","Button","moment","Edit","Alert","props","useStyles","theme","root","flexGrow","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","col","breakpoints","down","maxWidth","flexBasis","imgResponsive","width","cardLayout","overflow","Item","classes","isopen","setOpen","useState","data","localStorage","getItem","parse","JSON","user","name","username","picture","article","snackbar","loading","onClose","deleteArticle","editArticle","vertical","horizontal","open","title","severity","loadArticle","map","tile","_id","createdAt","format","thumbnail","imageUrl","__html","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport { Consumer } from \"../../../context/articleContext\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Button from \"@material-ui/core/Button\";\nimport moment from \"moment\";\nimport Edit from \"./Edit\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  col: {\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"100%\",\n      flexBasis: \"100%\",\n    },\n  },\n  imgResponsive: {\n    width: 450,\n    height: 200,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  cardLayout: {\n    height: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"auto\",\n      overflow: \"hidden\",\n    },\n  },\n}));\n\nexport default function Item() {\n  const classes = useStyles();\n  const [isopen, setOpen] = React.useState(false);\n  const data = localStorage.getItem(\"data\");\n  const parse = JSON.parse(data);\n\n  const user = {\n    name: parse.username,\n    avatar: `http://dashmanage.herokuapp.com/${parse.picture}`,\n  };\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <Consumer>\n          {({\n            article,\n            snackbar,\n            loading,\n            onClose,\n            deleteArticle,\n            editArticle,\n          }) => {\n            const {\n              vertical,\n              horizontal,\n              open,\n              title,\n              severity,\n              loadArticle,\n            } = snackbar;\n            return (\n              <React.Fragment>\n                <Snackbar\n                  anchorOrigin={{ vertical, horizontal }}\n                  open={open}\n                  autoHideDuration={6000}\n                  onClose={onClose}\n                  key={vertical + horizontal}\n                >\n                  <Alert onClose={onClose} severity={severity}>\n                    {title}\n                  </Alert>\n                </Snackbar>\n\n                <Grid container spacing={3}>\n                  {loadArticle\n                    ? \"loading..\"\n                    : article.map((tile) => {\n                        return (\n                          <Grid className={classes.col} item xs={6} sm={3}>\n                            <Card key={tile._id} className={classes.cardLayout}>\n                              <CardHeader\n                                avatar={\n                                  <Avatar\n                                    aria-label=\"recipe\"\n                                    src={user.avatar}\n                                    className={classes.avatar}\n                                  />\n                                }\n                                action={\n                                  <IconButton\n                                    aria-label=\"settings\"\n                                    onClick={() => setOpen(true)}\n                                  >\n                                    <CreateIcon />\n                                  </IconButton>\n                                }\n                                title={`${tile.title}`}\n                                subheader={moment(tile.createdAt).format(\"LLL\")}\n                              />\n                              <CardMedia\n                                className={classes.media}\n                                image={`http://dashmanage.herokuapp.com/${tile.thumbnail.imageUrl}`}\n                                title={tile.title}\n                              />\n\n                              <CardContent>\n                                <Typography\n                                  variant=\"body2\"\n                                  color=\"textSecondary\"\n                                  component=\"p\"\n                                  dangerouslySetInnerHTML={{\n                                    __html: `${tile.description}`,\n                                  }}\n                                />\n                              </CardContent>\n                              <CardActions disableSpacing>\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"secondary\"\n                                  disabled={loading}\n                                  onClick={() => deleteArticle(tile._id)}\n                                >\n                                  {loading ? \"Loading ...\" : \"DELETE\"}\n                                </Button>\n                              </CardActions>\n                            </Card>\n                          </Grid>\n                        );\n                      })}\n                </Grid>\n              </React.Fragment>\n            );\n          }}\n        </Consumer>\n      </Container>\n      <Edit\n        openModal={isopen}\n        // editArticle={() => editArticle(tile._id)}\n        handleClose={() => setOpen(false)}\n      />\n      ;\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}