{"ast":null,"code":"var _jsxFileName = \"/home/mronoyy/Documents/project/react-dashboard/src/components/RouteWithLayout/RouteWithLayout.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst RouteWithLayout = props => {\n  const {\n    layout: Layout,\n    component: Component,\n    ...rest\n  } = props;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: matchProps => localStorage.getItem(\"token\") ? /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, matchProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }))) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\nexport default RouteWithLayout;","map":{"version":3,"sources":["/home/mronoyy/Documents/project/react-dashboard/src/components/RouteWithLayout/RouteWithLayout.js"],"names":["React","Route","Redirect","PropTypes","RouteWithLayout","props","layout","Layout","component","Component","rest","matchProps","localStorage","getItem","propTypes","any","isRequired","path","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,MAAM,EAAEC,MAAV;AAAkBC,IAAAA,SAAS,EAAEC,SAA7B;AAAwC,OAAGC;AAA3C,MAAoDL,KAA1D;AAEA,sBACE,oBAAC,KAAD,oBACMK,IADN;AAEE,IAAA,MAAM,EAAGC,UAAD,IACNC,YAAY,CAACC,OAAb,CAAqB,OAArB,iBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD,oBAAeF,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,gBAKE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD,CAjBD;;AAmBAP,eAAe,CAACU,SAAhB,GAA4B;AAC1BN,EAAAA,SAAS,EAAEL,SAAS,CAACY,GAAV,CAAcC,UADC;AAE1BV,EAAAA,MAAM,EAAEH,SAAS,CAACY,GAAV,CAAcC,UAFI;AAG1BC,EAAAA,IAAI,EAAEd,SAAS,CAACe;AAHU,CAA5B;AAMA,eAAed,eAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst RouteWithLayout = (props) => {\n  const { layout: Layout, component: Component, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={(matchProps) =>\n        localStorage.getItem(\"token\") ? (\n          <Layout>\n            <Component {...matchProps} />\n          </Layout>\n        ) : (\n          <Redirect to=\"/sign-in\" />\n        )\n      }\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string,\n};\n\nexport default RouteWithLayout;\n"]},"metadata":{},"sourceType":"module"}