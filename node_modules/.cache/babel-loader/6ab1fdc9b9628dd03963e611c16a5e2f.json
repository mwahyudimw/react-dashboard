{"ast":null,"code":"import _slicedToArray from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/views/UserList/components/UsersTable/UsersTable.js\";\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { apiDashManage } from \"../../../../api/api\";\nimport axios from \"axios\";\n\nfunction UsersTable() {\n  const tableRef = React.createRef();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        listDataUser = _useState2[0],\n        setListDataUser = _useState2[1]; // useEffect(() => {\n  //   handleGetDataUser();\n  // }, []);\n  // const handleGetDataUser = () => {\n  //   axios({\n  //     method: \"get\",\n  //     url: `${apiDashManage + \"users\"}`,\n  //     headers: {\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n  //     },\n  //   }).then((res) => {\n  //     setListDataUser(res.data.user);\n  //     console.log(\"data baru user\", res);\n  //   });\n  // };\n\n\n  return React.createElement(MaterialTable, {\n    title: \"Users List\",\n    tableRef: tableRef,\n    columns: [{\n      title: \"Avatar\",\n      field: \"avatar\",\n      render: rowData => React.createElement(\"img\", {\n        style: {\n          height: 36,\n          borderRadius: \"50%\"\n        },\n        src: rowData.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })\n    }, {\n      title: \"ID User\",\n      field: \"_id\"\n    }, {\n      title: \"Email\",\n      field: \"email\"\n    }, {\n      title: \"Username\",\n      field: \"username\"\n    }],\n    data: query => new Promise((resolve, reject) => {\n      let url = \"https://reqres.in/api/users?\";\n      url += \"per_page=\" + query.pageSize;\n      url += \"&page=\" + (query.page + 1); // fetch(url)\n      //   .then((response) => response.json())\n      //   .then((result) => {\n      //     resolve({\n      //       data: result.data,\n      //       page: result.page - 1,\n      //       totalCount: result.total,\n      //     });\n      //   });\n\n      axios({\n        method: \"get\",\n        url: \"\".concat(apiDashManage + \"users\"),\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n        }\n      }).then(result => {\n        const dataUser = result.data.user;\n        resolve({\n          data: result.data.user,\n          page: 1 - 1,\n          totalCount: dataUser.length\n        });\n      });\n    }),\n    actions: [{\n      icon: \"refresh\",\n      tooltip: \"Refresh Data\",\n      isFreeAction: true,\n      onClick: () => tableRef.current && tableRef.current.onQueryChange()\n    }],\n    options: {\n      headerStyle: {\n        fontSize: \"15px\",\n        fontWeight: \"bold\",\n        borderRight: \"1px solid #ccc\"\n      },\n      rowStyle: {\n        fontFamily: \"Roboto,Helvetica,Arial,sans-serif\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n}\n\nexport default UsersTable;","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/views/UserList/components/UsersTable/UsersTable.js"],"names":["React","useState","useEffect","MaterialTable","apiDashManage","axios","UsersTable","tableRef","createRef","listDataUser","setListDataUser","title","field","render","rowData","height","borderRadius","avatar","query","Promise","resolve","reject","url","pageSize","page","method","headers","Authorization","localStorage","getItem","then","result","dataUser","data","user","totalCount","length","icon","tooltip","isFreeAction","onClick","current","onQueryChange","headerStyle","fontSize","fontWeight","borderRight","rowStyle","fontFamily"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { apiDashManage } from \"../../../../api/api\";\nimport axios from \"axios\";\n\nfunction UsersTable() {\n  const tableRef = React.createRef();\n  const [listDataUser, setListDataUser] = useState([]);\n\n  // useEffect(() => {\n  //   handleGetDataUser();\n  // }, []);\n  // const handleGetDataUser = () => {\n  //   axios({\n  //     method: \"get\",\n  //     url: `${apiDashManage + \"users\"}`,\n  //     headers: {\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n  //     },\n  //   }).then((res) => {\n  //     setListDataUser(res.data.user);\n  //     console.log(\"data baru user\", res);\n  //   });\n  // };\n\n  return (\n    <MaterialTable\n      title=\"Users List\"\n      tableRef={tableRef}\n      columns={[\n        {\n          title: \"Avatar\",\n          field: \"avatar\",\n          render: (rowData) => (\n            <img\n              style={{ height: 36, borderRadius: \"50%\" }}\n              src={rowData.avatar}\n            />\n          ),\n        },\n        { title: \"ID User\", field: \"_id\" },\n        { title: \"Email\", field: \"email\" },\n        { title: \"Username\", field: \"username\" },\n        // { title: \"Last Name\", field: \"last_name\" },\n      ]}\n      data={(query) =>\n        new Promise((resolve, reject) => {\n          let url = \"https://reqres.in/api/users?\";\n          url += \"per_page=\" + query.pageSize;\n          url += \"&page=\" + (query.page + 1);\n          // fetch(url)\n          //   .then((response) => response.json())\n          //   .then((result) => {\n          //     resolve({\n          //       data: result.data,\n          //       page: result.page - 1,\n          //       totalCount: result.total,\n          //     });\n          //   });\n          axios({\n            method: \"get\",\n            url: `${apiDashManage + \"users\"}`,\n            headers: {\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n          }).then((result) => {\n            const dataUser = result.data.user;\n            resolve({\n              data: result.data.user,\n              page: 1 - 1,\n              totalCount: dataUser.length,\n            });\n          });\n        })\n      }\n      actions={[\n        {\n          icon: \"refresh\",\n          tooltip: \"Refresh Data\",\n          isFreeAction: true,\n          onClick: () => tableRef.current && tableRef.current.onQueryChange(),\n        },\n      ]}\n      options={{\n        headerStyle: {\n          fontSize: \"15px\",\n          fontWeight: \"bold\",\n          borderRight: \"1px solid #ccc\",\n        },\n        rowStyle: {\n          fontFamily: \"Roboto,Helvetica,Arial,sans-serif\",\n        },\n      }}\n    />\n  );\n}\n\nexport default UsersTable;\n"]},"metadata":{},"sourceType":"module"}