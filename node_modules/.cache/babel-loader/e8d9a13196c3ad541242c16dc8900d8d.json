{"ast":null,"code":"import _slicedToArray from \"/home/dimas/git/react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dimas/git/react-dashboard/src/views/UserList/components/UsersTable/UsersTable.js\";\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { apiDashManage } from \"../../../../api/api\";\nimport axios from \"axios\";\n\nfunction UsersTable() {\n  const tableRef = React.createRef();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        listDataUser = _useState2[0],\n        setListDataUser = _useState2[1];\n\n  useEffect(() => {\n    handleGetDataUser();\n  }, []);\n\n  const handleGetDataUser = () => {\n    axios({\n      method: \"get\",\n      url: \"\".concat(apiDashManage + \"users\"),\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      setListDataUser(res.data.user);\n      console.log(\"data baru user\", res);\n    });\n  };\n\n  return React.createElement(MaterialTable, {\n    title: \"Users List\",\n    tableRef: tableRef,\n    columns: [{\n      title: \"Avatar\",\n      field: \"avatar\",\n      render: rowData => React.createElement(\"img\", {\n        style: {\n          height: 36,\n          borderRadius: \"50%\"\n        },\n        src: rowData.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })\n    }, {\n      title: \"ID User\",\n      field: \"id\"\n    }, {\n      title: \"Email\",\n      field: \"email\"\n    }, {\n      title: \"First Name\",\n      field: \"first_name\"\n    }, {\n      title: \"Last Name\",\n      field: \"last_name\"\n    }],\n    data: query => new Promise((resolve, reject) => {\n      // let url = \"https://reqres.in/api/users?\";\n      // url += \"per_page=\" + query.pageSize;\n      // url += \"&page=\" + (query.page + 1);\n      fetch(url).then(response => response.json()).then(result => {\n        resolve({\n          data: result.data,\n          page: result.page - 1,\n          totalCount: result.total\n        });\n      });\n    }),\n    actions: [{\n      icon: \"refresh\",\n      tooltip: \"Refresh Data\",\n      isFreeAction: true,\n      onClick: () => tableRef.current && tableRef.current.onQueryChange()\n    }],\n    options: {\n      headerStyle: {\n        fontSize: \"15px\",\n        fontWeight: \"bold\",\n        borderRight: \"1px solid #ccc\"\n      },\n      rowStyle: {\n        fontFamily: \"Roboto,Helvetica,Arial,sans-serif\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n}\n\nexport default UsersTable;","map":{"version":3,"sources":["/home/dimas/git/react-dashboard/src/views/UserList/components/UsersTable/UsersTable.js"],"names":["React","useState","useEffect","MaterialTable","apiDashManage","axios","UsersTable","tableRef","createRef","listDataUser","setListDataUser","handleGetDataUser","method","url","headers","Authorization","localStorage","getItem","then","res","data","user","console","log","title","field","render","rowData","height","borderRadius","avatar","query","Promise","resolve","reject","fetch","response","json","result","page","totalCount","total","icon","tooltip","isFreeAction","onClick","current","onQueryChange","headerStyle","fontSize","fontWeight","borderRight","rowStyle","fontFamily"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { apiDashManage } from \"../../../../api/api\";\nimport axios from \"axios\";\n\nfunction UsersTable() {\n  const tableRef = React.createRef();\n  const [listDataUser, setListDataUser] = useState([]);\n\n  useEffect(() => {\n    handleGetDataUser();\n  }, []);\n  const handleGetDataUser = () => {\n    axios({\n      method: \"get\",\n      url: `${apiDashManage + \"users\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n    }).then((res) => {\n      setListDataUser(res.data.user);\n      console.log(\"data baru user\", res);\n    });\n  };\n\n  return (\n    <MaterialTable\n      title=\"Users List\"\n      tableRef={tableRef}\n      columns={[\n        {\n          title: \"Avatar\",\n          field: \"avatar\",\n          render: (rowData) => (\n            <img\n              style={{ height: 36, borderRadius: \"50%\" }}\n              src={rowData.avatar}\n            />\n          ),\n        },\n        { title: \"ID User\", field: \"id\" },\n        { title: \"Email\", field: \"email\" },\n        { title: \"First Name\", field: \"first_name\" },\n        { title: \"Last Name\", field: \"last_name\" },\n      ]}\n      data={(query) =>\n        new Promise((resolve, reject) => {\n          // let url = \"https://reqres.in/api/users?\";\n          // url += \"per_page=\" + query.pageSize;\n          // url += \"&page=\" + (query.page + 1);\n          fetch(url)\n            .then((response) => response.json())\n            .then((result) => {\n              resolve({\n                data: result.data,\n                page: result.page - 1,\n                totalCount: result.total,\n              });\n            });\n        })\n      }\n      actions={[\n        {\n          icon: \"refresh\",\n          tooltip: \"Refresh Data\",\n          isFreeAction: true,\n          onClick: () => tableRef.current && tableRef.current.onQueryChange(),\n        },\n      ]}\n      options={{\n        headerStyle: {\n          fontSize: \"15px\",\n          fontWeight: \"bold\",\n          borderRight: \"1px solid #ccc\",\n        },\n        rowStyle: {\n          fontFamily: \"Roboto,Helvetica,Arial,sans-serif\",\n        },\n      }}\n    />\n  );\n}\n\nexport default UsersTable;\n"]},"metadata":{},"sourceType":"module"}