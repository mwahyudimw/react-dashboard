{"ast":null,"code":"var _jsxFileName = \"/home/mronoyy/Documents/project/react-dashboard/src/views/Article/components/Item.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Edit from \"./Edit\";\nimport Swal from \"sweetalert2\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  col: {\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"100%\",\n      flexBasis: \"100%\"\n    }\n  },\n  imgResponsive: {\n    width: 450,\n    height: 200,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\"\n    }\n  },\n  card: {\n    height: \"300px\",\n    overflow: \"auto\"\n  }\n}));\nexport default function Item() {\n  const classes = useStyles();\n  const [article, setArticle] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [timer, setTimer] = React.useState(null);\n  const [isMounted, setIsMounted] = React.useState(false);\n  const data = localStorage.getItem(\"data\");\n  const parse = JSON.parse(data);\n  const user = {\n    name: parse.username,\n    avatar: `http://dashmanage.herokuapp.com/${parse.picture}`,\n    bio: parse.role\n  };\n\n  async function getData() {\n    try {\n      const data = await fetch(\"http://dashmanage.herokuapp.com/api/v1/article\");\n      const response = await data.json();\n      setArticle(response.articles);\n    } catch (err) {\n      console.err(err);\n    }\n\n    clearTimeout(timer);\n    setTimer(setTimeout(getData, 200));\n  }\n\n  const deleteArticle = id => {\n    setLoading(true);\n    axios.delete(`http://dashmanage.herokuapp.com/api/v1/article/${id}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(() => {\n      setLoading(false);\n      Swal.fire({\n        icon: \"success\",\n        title: \"Article has been deleted !\"\n      });\n    }).catch(() => {\n      setLoading(false);\n      Swal.fire({\n        icon: \"error\",\n        title: \"Check your connections\",\n        text: \"\"\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (!isMounted) {\n      getData();\n      setIsMounted(true);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, article.map(tile => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      className: classes.col,\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      key: tile._id,\n      style: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        \"aria-label\": \"recipe\",\n        src: user.avatar,\n        className: classes.avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 23\n        }\n      }),\n      action: /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"settings\",\n        onClick: () => setOpen(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(CreateIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      })),\n      title: `${tile.title}`,\n      subheader: moment(tile.createdAt).format(\"LLL\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.media,\n      image: `http://dashmanage.herokuapp.com/${tile.thumbnail}`,\n      title: tile.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      dangerouslySetInnerHTML: {\n        __html: `${tile.description}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(CardActions, {\n      disableSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      disabled: loading,\n      onClick: () => deleteArticle(tile._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, loading ? \"Loading ...\" : \"DELETE\"))));\n  })), /*#__PURE__*/React.createElement(Edit, {\n    open: open,\n    handleClose: () => setOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/mronoyy/Documents/project/react-dashboard/src/views/Article/components/Item.js"],"names":["React","useEffect","makeStyles","red","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","Grid","IconButton","Container","CreateIcon","Button","axios","moment","Edit","Swal","useStyles","theme","root","flexGrow","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","col","breakpoints","down","maxWidth","flexBasis","imgResponsive","width","card","overflow","Item","classes","article","setArticle","useState","loading","setLoading","open","setOpen","timer","setTimer","isMounted","setIsMounted","data","localStorage","getItem","parse","JSON","user","name","username","picture","bio","role","getData","fetch","response","json","articles","err","console","clearTimeout","setTimeout","deleteArticle","id","delete","headers","Authorization","then","fire","icon","title","catch","text","map","tile","_id","createdAt","format","thumbnail","__html","description"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Edit from \"./Edit\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  col: {\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"100%\",\n      flexBasis: \"100%\",\n    },\n  },\n  imgResponsive: {\n    width: 450,\n    height: 200,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  card: {\n    height: \"300px\",\n    overflow: \"auto\",\n  },\n}));\n\nexport default function Item() {\n  const classes = useStyles();\n  const [article, setArticle] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [timer, setTimer] = React.useState(null);\n  const [isMounted, setIsMounted] = React.useState(false);\n\n  const data = localStorage.getItem(\"data\");\n  const parse = JSON.parse(data);\n\n  const user = {\n    name: parse.username,\n    avatar: `http://dashmanage.herokuapp.com/${parse.picture}`,\n    bio: parse.role,\n  };\n\n  async function getData() {\n    try {\n      const data = await fetch(\n        \"http://dashmanage.herokuapp.com/api/v1/article\"\n      );\n      const response = await data.json();\n      setArticle(response.articles);\n    } catch (err) {\n      console.err(err);\n    }\n    clearTimeout(timer);\n    setTimer(setTimeout(getData, 200));\n  }\n\n  const deleteArticle = (id) => {\n    setLoading(true);\n    axios\n      .delete(`http://dashmanage.herokuapp.com/api/v1/article/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then(() => {\n        setLoading(false);\n        Swal.fire({\n          icon: \"success\",\n          title: \"Article has been deleted !\",\n        });\n      })\n      .catch(() => {\n        setLoading(false);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Check your connections\",\n          text: \"\",\n        });\n      });\n  };\n\n  useEffect(() => {\n    if (!isMounted) {\n      getData();\n      setIsMounted(true);\n    }\n  });\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <Grid container spacing={3}>\n          {article.map((tile) => {\n            return (\n              <Grid className={classes.col} item xs={6} sm={3}>\n                <Card key={tile._id} style={classes.card}>\n                  <CardHeader\n                    avatar={\n                      <Avatar\n                        aria-label=\"recipe\"\n                        src={user.avatar}\n                        className={classes.avatar}\n                      />\n                    }\n                    action={\n                      <IconButton\n                        aria-label=\"settings\"\n                        onClick={() => setOpen(true)}\n                      >\n                        <CreateIcon />\n                      </IconButton>\n                    }\n                    title={`${tile.title}`}\n                    subheader={moment(tile.createdAt).format(\"LLL\")}\n                  />\n                  <CardMedia\n                    className={classes.media}\n                    image={`http://dashmanage.herokuapp.com/${tile.thumbnail}`}\n                    title={tile.title}\n                  />\n                  <CardContent>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                      dangerouslySetInnerHTML={{\n                        __html: `${tile.description}`,\n                      }}\n                    />\n                  </CardContent>\n                  <CardActions disableSpacing>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      disabled={loading}\n                      onClick={() => deleteArticle(tile._id)}\n                    >\n                      {loading ? \"Loading ...\" : \"DELETE\"}\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n\n        <Edit open={open} handleClose={() => setOpen(false)} />\n      </Container>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}