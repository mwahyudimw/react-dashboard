{"ast":null,"code":"var _jsxFileName = \"/home/mronoyy/Documents/project/react-dashboard/src/views/Category/Category.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { CategoryContext } from \"../../context/categoryContext\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Swal from \"sweetalert2\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(0.5)\n  },\n  content: {\n    marginTop: theme.spacing(0)\n  }\n}));\nexport default function Category() {\n  const classes = useStyles();\n  const [categoryContext, setCategoryContext] = useContext(CategoryContext);\n  const [nameCategory, setNameCategory] = useState([]);\n  const [loading, setLoading] = useState({\n    get: false,\n    add: false,\n    update: false,\n    delete: false\n  });\n  const [state, setState] = useState({\n    columns: [{\n      title: \"Name\",\n      field: \"name\"\n    }],\n    data: [{\n      name: \"Daun\"\n    }, {\n      name: \"Pohon\"\n    }, {\n      name: \"Lontong\"\n    }]\n  });\n  useEffect(() => {\n    handleGetCategory();\n  }, []);\n\n  const handleGetCategory = () => {\n    setLoading(loading => ({ ...loading,\n      get: true\n    }));\n    axios({\n      method: \"get\",\n      url: `${process.env.REACT_APP_API_DASH + \"/category\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      // console.log(\"respon get category\", res.data.categories);\n      setNameCategory(res.data.categories);\n      setCategoryContext(res.data.categories);\n      setLoading(loading => ({ ...loading,\n        get: false\n      }));\n    }).catch(err => {\n      setLoading(loading => ({ ...loading,\n        get: false\n      }));\n      Swal.fire({\n        icon: \"error\",\n        title: \"Check your connections\",\n        text: \"\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(LoadingOverlay, {\n    active: loading.get || loading.add || loading.update || loading.delete === true ? true : false,\n    spinner: true,\n    text: loading.get ? \"loading your data...\" : loading.add ? \"add data...\" : loading.update ? \"update data...\" : loading.delete ? \"delete data...\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    className: classes.content,\n    title: \"Category\",\n    columns: state.columns,\n    data: nameCategory,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setLoading(loading => ({ ...loading,\n          add: true\n        }));\n        resolve();\n        setState(prevState => {\n          const data = [...prevState.data];\n          axios({\n            method: \"post\",\n            url: `${apiDashManage + \"category\"}`,\n            headers: {\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n            },\n            data: newData\n          }).then(res => {\n            Swal.fire(\"Good job!\", \"added success\", \"success\");\n            handleGetCategory();\n            setLoading(loading => ({ ...loading,\n              add: false\n            }));\n          }).catch(err => {\n            setLoading(loading => ({ ...loading,\n              add: false\n            }));\n            Swal.fire({\n              icon: \"error\",\n              title: \"Check your connections\",\n              text: \"\"\n            });\n          });\n          return { ...prevState,\n            data\n          };\n        });\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setLoading(loading => ({ ...loading,\n          update: true\n        }));\n        resolve();\n\n        if (oldData) {\n          setState(prevState => {\n            const data = [...prevState.data];\n            axios({\n              method: \"put\",\n              url: `${apiDashManage + \"category\"}`,\n              headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n              },\n              data: {\n                name: newData.name,\n                id: newData._id\n              }\n            }).then(res => {\n              // console.log(\"edit category\", res);\n              handleGetCategory();\n              Swal.fire(\"Update Success\", \"\", \"success\");\n              setLoading(loading => ({ ...loading,\n                update: false\n              }));\n            }).catch(err => {\n              setLoading(loading => ({ ...loading,\n                update: false\n              }));\n              Swal.fire({\n                icon: \"error\",\n                title: \"Check your connections\",\n                text: \"\"\n              });\n            });\n            return { ...prevState,\n              data\n            };\n          });\n        }\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setLoading(loading => ({ ...loading,\n          delete: true\n        }));\n        resolve();\n        setState(prevState => {\n          const data = [...prevState.data];\n          axios({\n            method: \"delete\",\n            url: `${apiDashManage + `${\"category/\" + oldData._id}`}`,\n            headers: {\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n            }\n          }).then(res => {\n            //   console.log(\"delete category\", res);\n            handleGetCategory();\n            Swal.fire(\"Delete Success\", \"\", \"success\");\n            setLoading(loading => ({ ...loading,\n              delete: false\n            }));\n          }).catch(err => {\n            setLoading(loading => ({ ...loading,\n              delete: false\n            }));\n            Swal.fire({\n              icon: \"error\",\n              title: \"Check your connections\",\n              text: \"\"\n            });\n          });\n          return { ...prevState,\n            data\n          };\n        });\n      })\n    },\n    options: {\n      headerStyle: {\n        fontSize: \"15px\",\n        fontWeight: \"bold\",\n        borderRight: \"1px solid #fff\",\n        background: \"#358A7C\",\n        color: \"#fff\"\n      },\n      rowStyle: {\n        fontFamily: \"Roboto,Helvetica,Arial,sans-serif\"\n      },\n      exportButton: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/mronoyy/Documents/project/react-dashboard/src/views/Category/Category.js"],"names":["React","useState","useEffect","useContext","makeStyles","MaterialTable","axios","CategoryContext","LoadingOverlay","Swal","useStyles","theme","root","padding","spacing","content","marginTop","Category","classes","categoryContext","setCategoryContext","nameCategory","setNameCategory","loading","setLoading","get","add","update","delete","state","setState","columns","title","field","data","name","handleGetCategory","method","url","process","env","REACT_APP_API_DASH","headers","Authorization","localStorage","getItem","then","res","categories","catch","err","fire","icon","text","onRowAdd","newData","Promise","resolve","prevState","apiDashManage","onRowUpdate","oldData","id","_id","onRowDelete","headerStyle","fontSize","fontWeight","borderRight","background","color","rowStyle","fontFamily","exportButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { CategoryContext } from \"../../context/categoryContext\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(0.5),\n  },\n  content: {\n    marginTop: theme.spacing(0),\n  },\n}));\n\nexport default function Category() {\n  const classes = useStyles();\n  const [categoryContext, setCategoryContext] = useContext(CategoryContext);\n  const [nameCategory, setNameCategory] = useState([]);\n\n  const [loading, setLoading] = useState({\n    get: false,\n    add: false,\n    update: false,\n    delete: false,\n  });\n  const [state, setState] = useState({\n    columns: [{ title: \"Name\", field: \"name\" }],\n    data: [\n      {\n        name: \"Daun\",\n      },\n      {\n        name: \"Pohon\",\n      },\n      {\n        name: \"Lontong\",\n      },\n    ],\n  });\n\n  useEffect(() => {\n    handleGetCategory();\n  }, []);\n\n  const handleGetCategory = () => {\n    setLoading((loading) => ({\n      ...loading,\n      get: true,\n    }));\n    axios({\n      method: \"get\",\n      url: `${process.env.REACT_APP_API_DASH + \"/category\"}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => {\n        // console.log(\"respon get category\", res.data.categories);\n        setNameCategory(res.data.categories);\n        setCategoryContext(res.data.categories);\n        setLoading((loading) => ({\n          ...loading,\n          get: false,\n        }));\n      })\n      .catch((err) => {\n        setLoading((loading) => ({\n          ...loading,\n          get: false,\n        }));\n        Swal.fire({\n          icon: \"error\",\n          title: \"Check your connections\",\n          text: \"\",\n        });\n      });\n  };\n\n  return (\n    <LoadingOverlay\n      active={\n        loading.get || loading.add || loading.update || loading.delete === true\n          ? true\n          : false\n      }\n      spinner\n      text={\n        loading.get\n          ? \"loading your data...\"\n          : loading.add\n          ? \"add data...\"\n          : loading.update\n          ? \"update data...\"\n          : loading.delete\n          ? \"delete data...\"\n          : null\n      }\n    >\n      <div className={classes.root}>\n        <MaterialTable\n          className={classes.content}\n          title=\"Category\"\n          columns={state.columns}\n          data={nameCategory}\n          editable={{\n            onRowAdd: (newData) =>\n              new Promise((resolve) => {\n                setLoading((loading) => ({\n                  ...loading,\n                  add: true,\n                }));\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  axios({\n                    method: \"post\",\n                    url: `${apiDashManage + \"category\"}`,\n                    headers: {\n                      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n                    },\n                    data: newData,\n                  })\n                    .then((res) => {\n                      Swal.fire(\"Good job!\", \"added success\", \"success\");\n                      handleGetCategory();\n                      setLoading((loading) => ({\n                        ...loading,\n                        add: false,\n                      }));\n                    })\n                    .catch((err) => {\n                      setLoading((loading) => ({\n                        ...loading,\n                        add: false,\n                      }));\n                      Swal.fire({\n                        icon: \"error\",\n                        title: \"Check your connections\",\n                        text: \"\",\n                      });\n                    });\n                  return { ...prevState, data };\n                });\n              }),\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve) => {\n                setLoading((loading) => ({\n                  ...loading,\n                  update: true,\n                }));\n                resolve();\n                if (oldData) {\n                  setState((prevState) => {\n                    const data = [...prevState.data];\n                    axios({\n                      method: \"put\",\n                      url: `${apiDashManage + \"category\"}`,\n                      headers: {\n                        Authorization:\n                          \"Bearer \" + localStorage.getItem(\"token\"),\n                      },\n                      data: {\n                        name: newData.name,\n                        id: newData._id,\n                      },\n                    })\n                      .then((res) => {\n                        // console.log(\"edit category\", res);\n                        handleGetCategory();\n                        Swal.fire(\"Update Success\", \"\", \"success\");\n                        setLoading((loading) => ({\n                          ...loading,\n                          update: false,\n                        }));\n                      })\n                      .catch((err) => {\n                        setLoading((loading) => ({\n                          ...loading,\n                          update: false,\n                        }));\n                        Swal.fire({\n                          icon: \"error\",\n                          title: \"Check your connections\",\n                          text: \"\",\n                        });\n                      });\n                    return { ...prevState, data };\n                  });\n                }\n              }),\n            onRowDelete: (oldData) =>\n              new Promise((resolve) => {\n                setLoading((loading) => ({\n                  ...loading,\n                  delete: true,\n                }));\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  axios({\n                    method: \"delete\",\n                    url: `${apiDashManage + `${\"category/\" + oldData._id}`}`,\n                    headers: {\n                      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n                    },\n                  })\n                    .then((res) => {\n                      //   console.log(\"delete category\", res);\n                      handleGetCategory();\n                      Swal.fire(\"Delete Success\", \"\", \"success\");\n                      setLoading((loading) => ({\n                        ...loading,\n                        delete: false,\n                      }));\n                    })\n                    .catch((err) => {\n                      setLoading((loading) => ({\n                        ...loading,\n                        delete: false,\n                      }));\n                      Swal.fire({\n                        icon: \"error\",\n                        title: \"Check your connections\",\n                        text: \"\",\n                      });\n                    });\n                  return { ...prevState, data };\n                });\n              }),\n          }}\n          options={{\n            headerStyle: {\n              fontSize: \"15px\",\n              fontWeight: \"bold\",\n              borderRight: \"1px solid #fff\",\n              background: \"#358A7C\",\n              color: \"#fff\",\n            },\n            rowStyle: {\n              fontFamily: \"Roboto,Helvetica,Arial,sans-serif\",\n            },\n            exportButton: true,\n          }}\n        />\n      </div>\n    </LoadingOverlay>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}