{"ast":null,"code":"var _jsxFileName = \"/home/mronoyy/Documents/project/react-dashboard/src/layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js\";\n\n/* eslint-disable react/no-multi-comp */\n\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from \"react\";\nimport { NavLink as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { List, ListItem, Button, colors } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: \"flex\",\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: \"10px 8px\",\n    justifyContent: \"flex-start\",\n    textTransform: \"none\",\n    letterSpacing: 0,\n    width: \"100%\",\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    \"& $icon\": {\n      color: theme.palette.primary.main\n    }\n  }\n}));\nconst CustomRouterLink = forwardRef((props, ref) => /*#__PURE__*/React.createElement(\"div\", {\n  ref: ref,\n  style: {\n    flexGrow: 1\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(RouterLink, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}))));\n\nconst SidebarNav = props => {\n  const {\n    pages,\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"data\");\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/React.createElement(List, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), pages.map(page => /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.item,\n    disableGutters: true,\n    key: page.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    activeClassName: classes.active,\n    className: classes.button,\n    component: CustomRouterLink,\n    to: page.href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, page.icon), page.title))), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.item,\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    activeClassName: classes.active,\n    className: classes.button,\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), \"Logout\")));\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\nexport default SidebarNav;","map":{"version":3,"sources":["/home/mronoyy/Documents/project/react-dashboard/src/layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js"],"names":["React","forwardRef","NavLink","RouterLink","clsx","PropTypes","InputIcon","makeStyles","List","ListItem","Button","colors","useStyles","theme","root","item","display","paddingTop","paddingBottom","button","color","blueGrey","padding","justifyContent","textTransform","letterSpacing","width","fontWeight","typography","fontWeightMedium","icon","palette","height","alignItems","marginRight","spacing","active","primary","main","CustomRouterLink","props","ref","flexGrow","SidebarNav","pages","className","rest","classes","handleLogout","localStorage","removeItem","window","location","reload","map","page","title","href","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from \"react\";\nimport { NavLink as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { List, ListItem, Button, colors } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    display: \"flex\",\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: \"10px 8px\",\n    justifyContent: \"flex-start\",\n    textTransform: \"none\",\n    letterSpacing: 0,\n    width: \"100%\",\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(1),\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    \"& $icon\": {\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div ref={ref} style={{ flexGrow: 1 }}>\n    <RouterLink {...props} />\n  </div>\n));\n\nconst SidebarNav = (props) => {\n  const { pages, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"data\");\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  return (\n    <List {...rest} className={clsx(classes.root, className)}>\n      {pages.map((page) => (\n        <ListItem className={classes.item} disableGutters key={page.title}>\n          <Button\n            activeClassName={classes.active}\n            className={classes.button}\n            component={CustomRouterLink}\n            to={page.href}\n          >\n            <div className={classes.icon}>{page.icon}</div>\n            {page.title}\n          </Button>\n        </ListItem>\n      ))}\n\n      <ListItem className={classes.item} disableGutters>\n        <Button\n          activeClassName={classes.active}\n          className={classes.button}\n          onClick={handleLogout}\n        >\n          <div className={classes.icon}>\n            <InputIcon />\n          </div>\n          Logout\n        </Button>\n      </ListItem>\n    </List>\n  );\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired,\n};\n\nexport default SidebarNav;\n"]},"metadata":{},"sourceType":"module"}